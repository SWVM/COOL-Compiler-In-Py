Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT
    KEY_WORDS
    SPACE

Grammar

Rule 0     S' -> cool_prog
Rule 1     cool_prog -> cool_class SEMI cool_prog
Rule 2     cool_prog -> <empty>
Rule 3     cool_class -> CLASS TYPE INHERITS TYPE LBRACE feature_list RBRACE
Rule 4     cool_class -> CLASS TYPE LBRACE feature_list RBRACE
Rule 5     feature_list -> feature SEMI feature_list
Rule 6     feature_list -> <empty>
Rule 7     feature -> IDENTIFIER LPAREN formal_list RPAREN COLON TYPE LBRACE expression RBRACE
Rule 8     feature -> IDENTIFIER COLON TYPE LARROW expression
Rule 9     feature -> IDENTIFIER COLON TYPE
Rule 10    formal_list -> formal formal_tail
Rule 11    formal_list -> <empty>
Rule 12    formal_tail -> COMMA formal formal_tail
Rule 13    formal_tail -> <empty>
Rule 14    formal -> IDENTIFIER COLON TYPE
Rule 15    expression -> IDENTIFIER LARROW expression
Rule 16    expression -> expression AT TYPE DOT IDENTIFIER LPAREN arg_list RPAREN
Rule 17    expression -> expression DOT IDENTIFIER LPAREN arg_list RPAREN
Rule 18    expression -> IDENTIFIER LPAREN arg_list RPAREN
Rule 19    expression -> IF expression THEN expression ELSE expression FI
Rule 20    expression -> WHILE expression LOOP expression POOL
Rule 21    expression -> LBRACE block RBRACE
Rule 22    expression -> LET binding_list IN expression
Rule 23    expression -> CASE expression OF case_list ESAC
Rule 24    expression -> NEW TYPE
Rule 25    expression -> ISVOID expression
Rule 26    expression -> expression PLUS expression
Rule 27    expression -> expression MINUS expression
Rule 28    expression -> expression TIMES expression
Rule 29    expression -> expression DIVIDE expression
Rule 30    expression -> TILDE expression
Rule 31    expression -> expression LT expression
Rule 32    expression -> expression LE expression
Rule 33    expression -> expression EQUALS expression
Rule 34    expression -> NOT expression
Rule 35    expression -> LPAREN expression RPAREN
Rule 36    expression -> IDENTIFIER
Rule 37    expression -> INTEGER
Rule 38    expression -> STRING
Rule 39    expression -> TRUE
Rule 40    expression -> FALSE
Rule 41    arg_list -> expression arg_list_tail
Rule 42    arg_list -> <empty>
Rule 43    arg_list_tail -> COMMA expression arg_list_tail
Rule 44    arg_list_tail -> <empty>
Rule 45    block -> expression SEMI block
Rule 46    block -> <empty>
Rule 47    binding_list -> binding binding_list_tail
Rule 48    binding_list_tail -> COMMA binding binding_list_tail
Rule 49    binding_list_tail -> <empty>
Rule 50    binding -> IDENTIFIER COLON TYPE LARROW expression
Rule 51    binding -> IDENTIFIER COLON TYPE
Rule 52    case_list -> case_element
Rule 53    case_list -> case_element case_list
Rule 54    case_element -> IDENTIFIER COLON TYPE RARROW expression SEMI

Terminals, with rules where they appear

AT                   : 16
CASE                 : 23
CLASS                : 3 4
COLON                : 7 8 9 14 50 51 54
COMMA                : 12 43 48
COMMENT              : 
DIVIDE               : 29
DOT                  : 16 17
ELSE                 : 19
EQUALS               : 33
ESAC                 : 23
FALSE                : 40
FI                   : 19
IDENTIFIER           : 7 8 9 14 15 16 17 18 36 50 51 54
IF                   : 19
IN                   : 22
INHERITS             : 3
INTEGER              : 37
ISVOID               : 25
KEY_WORDS            : 
LARROW               : 8 15 50
LBRACE               : 3 4 7 21
LE                   : 32
LET                  : 22
LOOP                 : 20
LPAREN               : 7 16 17 18 35
LT                   : 31
MINUS                : 27
NEW                  : 24
NOT                  : 34
OF                   : 23
PLUS                 : 26
POOL                 : 20
RARROW               : 54
RBRACE               : 3 4 7 21
RPAREN               : 7 16 17 18 35
SEMI                 : 1 5 45 54
SPACE                : 
STRING               : 38
THEN                 : 19
TILDE                : 30
TIMES                : 28
TRUE                 : 39
TYPE                 : 3 3 4 7 8 9 14 16 24 50 51 54
WHILE                : 20
error                : 

Nonterminals, with rules where they appear

arg_list             : 16 17 18
arg_list_tail        : 41 43
binding              : 47 48
binding_list         : 22
binding_list_tail    : 47 48
block                : 21 45
case_element         : 52 53
case_list            : 23 53
cool_class           : 1
cool_prog            : 1 0
expression           : 7 8 15 16 17 19 19 19 20 20 22 23 25 26 26 27 27 28 28 29 29 30 31 31 32 32 33 33 34 35 41 43 45 50 54
feature              : 5
feature_list         : 3 4 5
formal               : 10 12
formal_list          : 7
formal_tail          : 10 12

Parsing method: LALR

state 0

    (0) S' -> . cool_prog
    (1) cool_prog -> . cool_class SEMI cool_prog
    (2) cool_prog -> .
    (3) cool_class -> . CLASS TYPE INHERITS TYPE LBRACE feature_list RBRACE
    (4) cool_class -> . CLASS TYPE LBRACE feature_list RBRACE

    $end            reduce using rule 2 (cool_prog -> .)
    CLASS           shift and go to state 3

    cool_prog                      shift and go to state 1
    cool_class                     shift and go to state 2

state 1

    (0) S' -> cool_prog .



state 2

    (1) cool_prog -> cool_class . SEMI cool_prog

    SEMI            shift and go to state 4


state 3

    (3) cool_class -> CLASS . TYPE INHERITS TYPE LBRACE feature_list RBRACE
    (4) cool_class -> CLASS . TYPE LBRACE feature_list RBRACE

    TYPE            shift and go to state 5


state 4

    (1) cool_prog -> cool_class SEMI . cool_prog
    (1) cool_prog -> . cool_class SEMI cool_prog
    (2) cool_prog -> .
    (3) cool_class -> . CLASS TYPE INHERITS TYPE LBRACE feature_list RBRACE
    (4) cool_class -> . CLASS TYPE LBRACE feature_list RBRACE

    $end            reduce using rule 2 (cool_prog -> .)
    CLASS           shift and go to state 3

    cool_class                     shift and go to state 2
    cool_prog                      shift and go to state 6

state 5

    (3) cool_class -> CLASS TYPE . INHERITS TYPE LBRACE feature_list RBRACE
    (4) cool_class -> CLASS TYPE . LBRACE feature_list RBRACE

    INHERITS        shift and go to state 7
    LBRACE          shift and go to state 8


state 6

    (1) cool_prog -> cool_class SEMI cool_prog .

    $end            reduce using rule 1 (cool_prog -> cool_class SEMI cool_prog .)


state 7

    (3) cool_class -> CLASS TYPE INHERITS . TYPE LBRACE feature_list RBRACE

    TYPE            shift and go to state 9


state 8

    (4) cool_class -> CLASS TYPE LBRACE . feature_list RBRACE
    (5) feature_list -> . feature SEMI feature_list
    (6) feature_list -> .
    (7) feature -> . IDENTIFIER LPAREN formal_list RPAREN COLON TYPE LBRACE expression RBRACE
    (8) feature -> . IDENTIFIER COLON TYPE LARROW expression
    (9) feature -> . IDENTIFIER COLON TYPE

    RBRACE          reduce using rule 6 (feature_list -> .)
    IDENTIFIER      shift and go to state 12

    feature_list                   shift and go to state 10
    feature                        shift and go to state 11

state 9

    (3) cool_class -> CLASS TYPE INHERITS TYPE . LBRACE feature_list RBRACE

    LBRACE          shift and go to state 13


state 10

    (4) cool_class -> CLASS TYPE LBRACE feature_list . RBRACE

    RBRACE          shift and go to state 14


state 11

    (5) feature_list -> feature . SEMI feature_list

    SEMI            shift and go to state 15


state 12

    (7) feature -> IDENTIFIER . LPAREN formal_list RPAREN COLON TYPE LBRACE expression RBRACE
    (8) feature -> IDENTIFIER . COLON TYPE LARROW expression
    (9) feature -> IDENTIFIER . COLON TYPE

    LPAREN          shift and go to state 16
    COLON           shift and go to state 17


state 13

    (3) cool_class -> CLASS TYPE INHERITS TYPE LBRACE . feature_list RBRACE
    (5) feature_list -> . feature SEMI feature_list
    (6) feature_list -> .
    (7) feature -> . IDENTIFIER LPAREN formal_list RPAREN COLON TYPE LBRACE expression RBRACE
    (8) feature -> . IDENTIFIER COLON TYPE LARROW expression
    (9) feature -> . IDENTIFIER COLON TYPE

    RBRACE          reduce using rule 6 (feature_list -> .)
    IDENTIFIER      shift and go to state 12

    feature_list                   shift and go to state 18
    feature                        shift and go to state 11

state 14

    (4) cool_class -> CLASS TYPE LBRACE feature_list RBRACE .

    SEMI            reduce using rule 4 (cool_class -> CLASS TYPE LBRACE feature_list RBRACE .)


state 15

    (5) feature_list -> feature SEMI . feature_list
    (5) feature_list -> . feature SEMI feature_list
    (6) feature_list -> .
    (7) feature -> . IDENTIFIER LPAREN formal_list RPAREN COLON TYPE LBRACE expression RBRACE
    (8) feature -> . IDENTIFIER COLON TYPE LARROW expression
    (9) feature -> . IDENTIFIER COLON TYPE

    RBRACE          reduce using rule 6 (feature_list -> .)
    IDENTIFIER      shift and go to state 12

    feature                        shift and go to state 11
    feature_list                   shift and go to state 19

state 16

    (7) feature -> IDENTIFIER LPAREN . formal_list RPAREN COLON TYPE LBRACE expression RBRACE
    (10) formal_list -> . formal formal_tail
    (11) formal_list -> .
    (14) formal -> . IDENTIFIER COLON TYPE

    RPAREN          reduce using rule 11 (formal_list -> .)
    IDENTIFIER      shift and go to state 20

    formal_list                    shift and go to state 21
    formal                         shift and go to state 22

state 17

    (8) feature -> IDENTIFIER COLON . TYPE LARROW expression
    (9) feature -> IDENTIFIER COLON . TYPE

    TYPE            shift and go to state 23


state 18

    (3) cool_class -> CLASS TYPE INHERITS TYPE LBRACE feature_list . RBRACE

    RBRACE          shift and go to state 24


state 19

    (5) feature_list -> feature SEMI feature_list .

    RBRACE          reduce using rule 5 (feature_list -> feature SEMI feature_list .)


state 20

    (14) formal -> IDENTIFIER . COLON TYPE

    COLON           shift and go to state 25


state 21

    (7) feature -> IDENTIFIER LPAREN formal_list . RPAREN COLON TYPE LBRACE expression RBRACE

    RPAREN          shift and go to state 26


state 22

    (10) formal_list -> formal . formal_tail
    (12) formal_tail -> . COMMA formal formal_tail
    (13) formal_tail -> .

    COMMA           shift and go to state 28
    RPAREN          reduce using rule 13 (formal_tail -> .)

    formal_tail                    shift and go to state 27

state 23

    (8) feature -> IDENTIFIER COLON TYPE . LARROW expression
    (9) feature -> IDENTIFIER COLON TYPE .

    LARROW          shift and go to state 29
    SEMI            reduce using rule 9 (feature -> IDENTIFIER COLON TYPE .)


state 24

    (3) cool_class -> CLASS TYPE INHERITS TYPE LBRACE feature_list RBRACE .

    SEMI            reduce using rule 3 (cool_class -> CLASS TYPE INHERITS TYPE LBRACE feature_list RBRACE .)


state 25

    (14) formal -> IDENTIFIER COLON . TYPE

    TYPE            shift and go to state 30


state 26

    (7) feature -> IDENTIFIER LPAREN formal_list RPAREN . COLON TYPE LBRACE expression RBRACE

    COLON           shift and go to state 31


state 27

    (10) formal_list -> formal formal_tail .

    RPAREN          reduce using rule 10 (formal_list -> formal formal_tail .)


state 28

    (12) formal_tail -> COMMA . formal formal_tail
    (14) formal -> . IDENTIFIER COLON TYPE

    IDENTIFIER      shift and go to state 20

    formal                         shift and go to state 32

state 29

    (8) feature -> IDENTIFIER COLON TYPE LARROW . expression
    (15) expression -> . IDENTIFIER LARROW expression
    (16) expression -> . expression AT TYPE DOT IDENTIFIER LPAREN arg_list RPAREN
    (17) expression -> . expression DOT IDENTIFIER LPAREN arg_list RPAREN
    (18) expression -> . IDENTIFIER LPAREN arg_list RPAREN
    (19) expression -> . IF expression THEN expression ELSE expression FI
    (20) expression -> . WHILE expression LOOP expression POOL
    (21) expression -> . LBRACE block RBRACE
    (22) expression -> . LET binding_list IN expression
    (23) expression -> . CASE expression OF case_list ESAC
    (24) expression -> . NEW TYPE
    (25) expression -> . ISVOID expression
    (26) expression -> . expression PLUS expression
    (27) expression -> . expression MINUS expression
    (28) expression -> . expression TIMES expression
    (29) expression -> . expression DIVIDE expression
    (30) expression -> . TILDE expression
    (31) expression -> . expression LT expression
    (32) expression -> . expression LE expression
    (33) expression -> . expression EQUALS expression
    (34) expression -> . NOT expression
    (35) expression -> . LPAREN expression RPAREN
    (36) expression -> . IDENTIFIER
    (37) expression -> . INTEGER
    (38) expression -> . STRING
    (39) expression -> . TRUE
    (40) expression -> . FALSE

    IDENTIFIER      shift and go to state 33
    IF              shift and go to state 36
    WHILE           shift and go to state 37
    LBRACE          shift and go to state 38
    LET             shift and go to state 39
    CASE            shift and go to state 40
    NEW             shift and go to state 41
    ISVOID          shift and go to state 42
    TILDE           shift and go to state 43
    NOT             shift and go to state 44
    LPAREN          shift and go to state 35
    INTEGER         shift and go to state 45
    STRING          shift and go to state 46
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    expression                     shift and go to state 34

state 30

    (14) formal -> IDENTIFIER COLON TYPE .

    COMMA           reduce using rule 14 (formal -> IDENTIFIER COLON TYPE .)
    RPAREN          reduce using rule 14 (formal -> IDENTIFIER COLON TYPE .)


state 31

    (7) feature -> IDENTIFIER LPAREN formal_list RPAREN COLON . TYPE LBRACE expression RBRACE

    TYPE            shift and go to state 49


state 32

    (12) formal_tail -> COMMA formal . formal_tail
    (12) formal_tail -> . COMMA formal formal_tail
    (13) formal_tail -> .

    COMMA           shift and go to state 28
    RPAREN          reduce using rule 13 (formal_tail -> .)

    formal_tail                    shift and go to state 50

state 33

    (15) expression -> IDENTIFIER . LARROW expression
    (18) expression -> IDENTIFIER . LPAREN arg_list RPAREN
    (36) expression -> IDENTIFIER .

    LARROW          shift and go to state 51
    LPAREN          shift and go to state 52
    AT              reduce using rule 36 (expression -> IDENTIFIER .)
    DOT             reduce using rule 36 (expression -> IDENTIFIER .)
    PLUS            reduce using rule 36 (expression -> IDENTIFIER .)
    MINUS           reduce using rule 36 (expression -> IDENTIFIER .)
    TIMES           reduce using rule 36 (expression -> IDENTIFIER .)
    DIVIDE          reduce using rule 36 (expression -> IDENTIFIER .)
    LT              reduce using rule 36 (expression -> IDENTIFIER .)
    LE              reduce using rule 36 (expression -> IDENTIFIER .)
    EQUALS          reduce using rule 36 (expression -> IDENTIFIER .)
    SEMI            reduce using rule 36 (expression -> IDENTIFIER .)
    RPAREN          reduce using rule 36 (expression -> IDENTIFIER .)
    THEN            reduce using rule 36 (expression -> IDENTIFIER .)
    LOOP            reduce using rule 36 (expression -> IDENTIFIER .)
    OF              reduce using rule 36 (expression -> IDENTIFIER .)
    COMMA           reduce using rule 36 (expression -> IDENTIFIER .)
    RBRACE          reduce using rule 36 (expression -> IDENTIFIER .)
    ELSE            reduce using rule 36 (expression -> IDENTIFIER .)
    POOL            reduce using rule 36 (expression -> IDENTIFIER .)
    FI              reduce using rule 36 (expression -> IDENTIFIER .)
    IN              reduce using rule 36 (expression -> IDENTIFIER .)


state 34

    (8) feature -> IDENTIFIER COLON TYPE LARROW expression .
    (16) expression -> expression . AT TYPE DOT IDENTIFIER LPAREN arg_list RPAREN
    (17) expression -> expression . DOT IDENTIFIER LPAREN arg_list RPAREN
    (26) expression -> expression . PLUS expression
    (27) expression -> expression . MINUS expression
    (28) expression -> expression . TIMES expression
    (29) expression -> expression . DIVIDE expression
    (31) expression -> expression . LT expression
    (32) expression -> expression . LE expression
    (33) expression -> expression . EQUALS expression

    SEMI            reduce using rule 8 (feature -> IDENTIFIER COLON TYPE LARROW expression .)
    AT              shift and go to state 53
    DOT             shift and go to state 54
    PLUS            shift and go to state 55
    MINUS           shift and go to state 56
    TIMES           shift and go to state 57
    DIVIDE          shift and go to state 58
    LT              shift and go to state 59
    LE              shift and go to state 60
    EQUALS          shift and go to state 61


state 35

    (35) expression -> LPAREN . expression RPAREN
    (15) expression -> . IDENTIFIER LARROW expression
    (16) expression -> . expression AT TYPE DOT IDENTIFIER LPAREN arg_list RPAREN
    (17) expression -> . expression DOT IDENTIFIER LPAREN arg_list RPAREN
    (18) expression -> . IDENTIFIER LPAREN arg_list RPAREN
    (19) expression -> . IF expression THEN expression ELSE expression FI
    (20) expression -> . WHILE expression LOOP expression POOL
    (21) expression -> . LBRACE block RBRACE
    (22) expression -> . LET binding_list IN expression
    (23) expression -> . CASE expression OF case_list ESAC
    (24) expression -> . NEW TYPE
    (25) expression -> . ISVOID expression
    (26) expression -> . expression PLUS expression
    (27) expression -> . expression MINUS expression
    (28) expression -> . expression TIMES expression
    (29) expression -> . expression DIVIDE expression
    (30) expression -> . TILDE expression
    (31) expression -> . expression LT expression
    (32) expression -> . expression LE expression
    (33) expression -> . expression EQUALS expression
    (34) expression -> . NOT expression
    (35) expression -> . LPAREN expression RPAREN
    (36) expression -> . IDENTIFIER
    (37) expression -> . INTEGER
    (38) expression -> . STRING
    (39) expression -> . TRUE
    (40) expression -> . FALSE

    IDENTIFIER      shift and go to state 33
    IF              shift and go to state 36
    WHILE           shift and go to state 37
    LBRACE          shift and go to state 38
    LET             shift and go to state 39
    CASE            shift and go to state 40
    NEW             shift and go to state 41
    ISVOID          shift and go to state 42
    TILDE           shift and go to state 43
    NOT             shift and go to state 44
    LPAREN          shift and go to state 35
    INTEGER         shift and go to state 45
    STRING          shift and go to state 46
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    expression                     shift and go to state 62

state 36

    (19) expression -> IF . expression THEN expression ELSE expression FI
    (15) expression -> . IDENTIFIER LARROW expression
    (16) expression -> . expression AT TYPE DOT IDENTIFIER LPAREN arg_list RPAREN
    (17) expression -> . expression DOT IDENTIFIER LPAREN arg_list RPAREN
    (18) expression -> . IDENTIFIER LPAREN arg_list RPAREN
    (19) expression -> . IF expression THEN expression ELSE expression FI
    (20) expression -> . WHILE expression LOOP expression POOL
    (21) expression -> . LBRACE block RBRACE
    (22) expression -> . LET binding_list IN expression
    (23) expression -> . CASE expression OF case_list ESAC
    (24) expression -> . NEW TYPE
    (25) expression -> . ISVOID expression
    (26) expression -> . expression PLUS expression
    (27) expression -> . expression MINUS expression
    (28) expression -> . expression TIMES expression
    (29) expression -> . expression DIVIDE expression
    (30) expression -> . TILDE expression
    (31) expression -> . expression LT expression
    (32) expression -> . expression LE expression
    (33) expression -> . expression EQUALS expression
    (34) expression -> . NOT expression
    (35) expression -> . LPAREN expression RPAREN
    (36) expression -> . IDENTIFIER
    (37) expression -> . INTEGER
    (38) expression -> . STRING
    (39) expression -> . TRUE
    (40) expression -> . FALSE

    IDENTIFIER      shift and go to state 33
    IF              shift and go to state 36
    WHILE           shift and go to state 37
    LBRACE          shift and go to state 38
    LET             shift and go to state 39
    CASE            shift and go to state 40
    NEW             shift and go to state 41
    ISVOID          shift and go to state 42
    TILDE           shift and go to state 43
    NOT             shift and go to state 44
    LPAREN          shift and go to state 35
    INTEGER         shift and go to state 45
    STRING          shift and go to state 46
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    expression                     shift and go to state 63

state 37

    (20) expression -> WHILE . expression LOOP expression POOL
    (15) expression -> . IDENTIFIER LARROW expression
    (16) expression -> . expression AT TYPE DOT IDENTIFIER LPAREN arg_list RPAREN
    (17) expression -> . expression DOT IDENTIFIER LPAREN arg_list RPAREN
    (18) expression -> . IDENTIFIER LPAREN arg_list RPAREN
    (19) expression -> . IF expression THEN expression ELSE expression FI
    (20) expression -> . WHILE expression LOOP expression POOL
    (21) expression -> . LBRACE block RBRACE
    (22) expression -> . LET binding_list IN expression
    (23) expression -> . CASE expression OF case_list ESAC
    (24) expression -> . NEW TYPE
    (25) expression -> . ISVOID expression
    (26) expression -> . expression PLUS expression
    (27) expression -> . expression MINUS expression
    (28) expression -> . expression TIMES expression
    (29) expression -> . expression DIVIDE expression
    (30) expression -> . TILDE expression
    (31) expression -> . expression LT expression
    (32) expression -> . expression LE expression
    (33) expression -> . expression EQUALS expression
    (34) expression -> . NOT expression
    (35) expression -> . LPAREN expression RPAREN
    (36) expression -> . IDENTIFIER
    (37) expression -> . INTEGER
    (38) expression -> . STRING
    (39) expression -> . TRUE
    (40) expression -> . FALSE

    IDENTIFIER      shift and go to state 33
    IF              shift and go to state 36
    WHILE           shift and go to state 37
    LBRACE          shift and go to state 38
    LET             shift and go to state 39
    CASE            shift and go to state 40
    NEW             shift and go to state 41
    ISVOID          shift and go to state 42
    TILDE           shift and go to state 43
    NOT             shift and go to state 44
    LPAREN          shift and go to state 35
    INTEGER         shift and go to state 45
    STRING          shift and go to state 46
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    expression                     shift and go to state 64

state 38

    (21) expression -> LBRACE . block RBRACE
    (45) block -> . expression SEMI block
    (46) block -> .
    (15) expression -> . IDENTIFIER LARROW expression
    (16) expression -> . expression AT TYPE DOT IDENTIFIER LPAREN arg_list RPAREN
    (17) expression -> . expression DOT IDENTIFIER LPAREN arg_list RPAREN
    (18) expression -> . IDENTIFIER LPAREN arg_list RPAREN
    (19) expression -> . IF expression THEN expression ELSE expression FI
    (20) expression -> . WHILE expression LOOP expression POOL
    (21) expression -> . LBRACE block RBRACE
    (22) expression -> . LET binding_list IN expression
    (23) expression -> . CASE expression OF case_list ESAC
    (24) expression -> . NEW TYPE
    (25) expression -> . ISVOID expression
    (26) expression -> . expression PLUS expression
    (27) expression -> . expression MINUS expression
    (28) expression -> . expression TIMES expression
    (29) expression -> . expression DIVIDE expression
    (30) expression -> . TILDE expression
    (31) expression -> . expression LT expression
    (32) expression -> . expression LE expression
    (33) expression -> . expression EQUALS expression
    (34) expression -> . NOT expression
    (35) expression -> . LPAREN expression RPAREN
    (36) expression -> . IDENTIFIER
    (37) expression -> . INTEGER
    (38) expression -> . STRING
    (39) expression -> . TRUE
    (40) expression -> . FALSE

    RBRACE          reduce using rule 46 (block -> .)
    IDENTIFIER      shift and go to state 33
    IF              shift and go to state 36
    WHILE           shift and go to state 37
    LBRACE          shift and go to state 38
    LET             shift and go to state 39
    CASE            shift and go to state 40
    NEW             shift and go to state 41
    ISVOID          shift and go to state 42
    TILDE           shift and go to state 43
    NOT             shift and go to state 44
    LPAREN          shift and go to state 35
    INTEGER         shift and go to state 45
    STRING          shift and go to state 46
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    block                          shift and go to state 65
    expression                     shift and go to state 66

state 39

    (22) expression -> LET . binding_list IN expression
    (47) binding_list -> . binding binding_list_tail
    (50) binding -> . IDENTIFIER COLON TYPE LARROW expression
    (51) binding -> . IDENTIFIER COLON TYPE

    IDENTIFIER      shift and go to state 69

    binding_list                   shift and go to state 67
    binding                        shift and go to state 68

state 40

    (23) expression -> CASE . expression OF case_list ESAC
    (15) expression -> . IDENTIFIER LARROW expression
    (16) expression -> . expression AT TYPE DOT IDENTIFIER LPAREN arg_list RPAREN
    (17) expression -> . expression DOT IDENTIFIER LPAREN arg_list RPAREN
    (18) expression -> . IDENTIFIER LPAREN arg_list RPAREN
    (19) expression -> . IF expression THEN expression ELSE expression FI
    (20) expression -> . WHILE expression LOOP expression POOL
    (21) expression -> . LBRACE block RBRACE
    (22) expression -> . LET binding_list IN expression
    (23) expression -> . CASE expression OF case_list ESAC
    (24) expression -> . NEW TYPE
    (25) expression -> . ISVOID expression
    (26) expression -> . expression PLUS expression
    (27) expression -> . expression MINUS expression
    (28) expression -> . expression TIMES expression
    (29) expression -> . expression DIVIDE expression
    (30) expression -> . TILDE expression
    (31) expression -> . expression LT expression
    (32) expression -> . expression LE expression
    (33) expression -> . expression EQUALS expression
    (34) expression -> . NOT expression
    (35) expression -> . LPAREN expression RPAREN
    (36) expression -> . IDENTIFIER
    (37) expression -> . INTEGER
    (38) expression -> . STRING
    (39) expression -> . TRUE
    (40) expression -> . FALSE

    IDENTIFIER      shift and go to state 33
    IF              shift and go to state 36
    WHILE           shift and go to state 37
    LBRACE          shift and go to state 38
    LET             shift and go to state 39
    CASE            shift and go to state 40
    NEW             shift and go to state 41
    ISVOID          shift and go to state 42
    TILDE           shift and go to state 43
    NOT             shift and go to state 44
    LPAREN          shift and go to state 35
    INTEGER         shift and go to state 45
    STRING          shift and go to state 46
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    expression                     shift and go to state 70

state 41

    (24) expression -> NEW . TYPE

    TYPE            shift and go to state 71


state 42

    (25) expression -> ISVOID . expression
    (15) expression -> . IDENTIFIER LARROW expression
    (16) expression -> . expression AT TYPE DOT IDENTIFIER LPAREN arg_list RPAREN
    (17) expression -> . expression DOT IDENTIFIER LPAREN arg_list RPAREN
    (18) expression -> . IDENTIFIER LPAREN arg_list RPAREN
    (19) expression -> . IF expression THEN expression ELSE expression FI
    (20) expression -> . WHILE expression LOOP expression POOL
    (21) expression -> . LBRACE block RBRACE
    (22) expression -> . LET binding_list IN expression
    (23) expression -> . CASE expression OF case_list ESAC
    (24) expression -> . NEW TYPE
    (25) expression -> . ISVOID expression
    (26) expression -> . expression PLUS expression
    (27) expression -> . expression MINUS expression
    (28) expression -> . expression TIMES expression
    (29) expression -> . expression DIVIDE expression
    (30) expression -> . TILDE expression
    (31) expression -> . expression LT expression
    (32) expression -> . expression LE expression
    (33) expression -> . expression EQUALS expression
    (34) expression -> . NOT expression
    (35) expression -> . LPAREN expression RPAREN
    (36) expression -> . IDENTIFIER
    (37) expression -> . INTEGER
    (38) expression -> . STRING
    (39) expression -> . TRUE
    (40) expression -> . FALSE

    IDENTIFIER      shift and go to state 33
    IF              shift and go to state 36
    WHILE           shift and go to state 37
    LBRACE          shift and go to state 38
    LET             shift and go to state 39
    CASE            shift and go to state 40
    NEW             shift and go to state 41
    ISVOID          shift and go to state 42
    TILDE           shift and go to state 43
    NOT             shift and go to state 44
    LPAREN          shift and go to state 35
    INTEGER         shift and go to state 45
    STRING          shift and go to state 46
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    expression                     shift and go to state 72

state 43

    (30) expression -> TILDE . expression
    (15) expression -> . IDENTIFIER LARROW expression
    (16) expression -> . expression AT TYPE DOT IDENTIFIER LPAREN arg_list RPAREN
    (17) expression -> . expression DOT IDENTIFIER LPAREN arg_list RPAREN
    (18) expression -> . IDENTIFIER LPAREN arg_list RPAREN
    (19) expression -> . IF expression THEN expression ELSE expression FI
    (20) expression -> . WHILE expression LOOP expression POOL
    (21) expression -> . LBRACE block RBRACE
    (22) expression -> . LET binding_list IN expression
    (23) expression -> . CASE expression OF case_list ESAC
    (24) expression -> . NEW TYPE
    (25) expression -> . ISVOID expression
    (26) expression -> . expression PLUS expression
    (27) expression -> . expression MINUS expression
    (28) expression -> . expression TIMES expression
    (29) expression -> . expression DIVIDE expression
    (30) expression -> . TILDE expression
    (31) expression -> . expression LT expression
    (32) expression -> . expression LE expression
    (33) expression -> . expression EQUALS expression
    (34) expression -> . NOT expression
    (35) expression -> . LPAREN expression RPAREN
    (36) expression -> . IDENTIFIER
    (37) expression -> . INTEGER
    (38) expression -> . STRING
    (39) expression -> . TRUE
    (40) expression -> . FALSE

    IDENTIFIER      shift and go to state 33
    IF              shift and go to state 36
    WHILE           shift and go to state 37
    LBRACE          shift and go to state 38
    LET             shift and go to state 39
    CASE            shift and go to state 40
    NEW             shift and go to state 41
    ISVOID          shift and go to state 42
    TILDE           shift and go to state 43
    NOT             shift and go to state 44
    LPAREN          shift and go to state 35
    INTEGER         shift and go to state 45
    STRING          shift and go to state 46
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    expression                     shift and go to state 73

state 44

    (34) expression -> NOT . expression
    (15) expression -> . IDENTIFIER LARROW expression
    (16) expression -> . expression AT TYPE DOT IDENTIFIER LPAREN arg_list RPAREN
    (17) expression -> . expression DOT IDENTIFIER LPAREN arg_list RPAREN
    (18) expression -> . IDENTIFIER LPAREN arg_list RPAREN
    (19) expression -> . IF expression THEN expression ELSE expression FI
    (20) expression -> . WHILE expression LOOP expression POOL
    (21) expression -> . LBRACE block RBRACE
    (22) expression -> . LET binding_list IN expression
    (23) expression -> . CASE expression OF case_list ESAC
    (24) expression -> . NEW TYPE
    (25) expression -> . ISVOID expression
    (26) expression -> . expression PLUS expression
    (27) expression -> . expression MINUS expression
    (28) expression -> . expression TIMES expression
    (29) expression -> . expression DIVIDE expression
    (30) expression -> . TILDE expression
    (31) expression -> . expression LT expression
    (32) expression -> . expression LE expression
    (33) expression -> . expression EQUALS expression
    (34) expression -> . NOT expression
    (35) expression -> . LPAREN expression RPAREN
    (36) expression -> . IDENTIFIER
    (37) expression -> . INTEGER
    (38) expression -> . STRING
    (39) expression -> . TRUE
    (40) expression -> . FALSE

    IDENTIFIER      shift and go to state 33
    IF              shift and go to state 36
    WHILE           shift and go to state 37
    LBRACE          shift and go to state 38
    LET             shift and go to state 39
    CASE            shift and go to state 40
    NEW             shift and go to state 41
    ISVOID          shift and go to state 42
    TILDE           shift and go to state 43
    NOT             shift and go to state 44
    LPAREN          shift and go to state 35
    INTEGER         shift and go to state 45
    STRING          shift and go to state 46
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    expression                     shift and go to state 74

state 45

    (37) expression -> INTEGER .

    AT              reduce using rule 37 (expression -> INTEGER .)
    DOT             reduce using rule 37 (expression -> INTEGER .)
    PLUS            reduce using rule 37 (expression -> INTEGER .)
    MINUS           reduce using rule 37 (expression -> INTEGER .)
    TIMES           reduce using rule 37 (expression -> INTEGER .)
    DIVIDE          reduce using rule 37 (expression -> INTEGER .)
    LT              reduce using rule 37 (expression -> INTEGER .)
    LE              reduce using rule 37 (expression -> INTEGER .)
    EQUALS          reduce using rule 37 (expression -> INTEGER .)
    SEMI            reduce using rule 37 (expression -> INTEGER .)
    RPAREN          reduce using rule 37 (expression -> INTEGER .)
    THEN            reduce using rule 37 (expression -> INTEGER .)
    LOOP            reduce using rule 37 (expression -> INTEGER .)
    OF              reduce using rule 37 (expression -> INTEGER .)
    COMMA           reduce using rule 37 (expression -> INTEGER .)
    RBRACE          reduce using rule 37 (expression -> INTEGER .)
    ELSE            reduce using rule 37 (expression -> INTEGER .)
    POOL            reduce using rule 37 (expression -> INTEGER .)
    FI              reduce using rule 37 (expression -> INTEGER .)
    IN              reduce using rule 37 (expression -> INTEGER .)


state 46

    (38) expression -> STRING .

    AT              reduce using rule 38 (expression -> STRING .)
    DOT             reduce using rule 38 (expression -> STRING .)
    PLUS            reduce using rule 38 (expression -> STRING .)
    MINUS           reduce using rule 38 (expression -> STRING .)
    TIMES           reduce using rule 38 (expression -> STRING .)
    DIVIDE          reduce using rule 38 (expression -> STRING .)
    LT              reduce using rule 38 (expression -> STRING .)
    LE              reduce using rule 38 (expression -> STRING .)
    EQUALS          reduce using rule 38 (expression -> STRING .)
    SEMI            reduce using rule 38 (expression -> STRING .)
    RPAREN          reduce using rule 38 (expression -> STRING .)
    THEN            reduce using rule 38 (expression -> STRING .)
    LOOP            reduce using rule 38 (expression -> STRING .)
    OF              reduce using rule 38 (expression -> STRING .)
    COMMA           reduce using rule 38 (expression -> STRING .)
    RBRACE          reduce using rule 38 (expression -> STRING .)
    ELSE            reduce using rule 38 (expression -> STRING .)
    POOL            reduce using rule 38 (expression -> STRING .)
    FI              reduce using rule 38 (expression -> STRING .)
    IN              reduce using rule 38 (expression -> STRING .)


state 47

    (39) expression -> TRUE .

    AT              reduce using rule 39 (expression -> TRUE .)
    DOT             reduce using rule 39 (expression -> TRUE .)
    PLUS            reduce using rule 39 (expression -> TRUE .)
    MINUS           reduce using rule 39 (expression -> TRUE .)
    TIMES           reduce using rule 39 (expression -> TRUE .)
    DIVIDE          reduce using rule 39 (expression -> TRUE .)
    LT              reduce using rule 39 (expression -> TRUE .)
    LE              reduce using rule 39 (expression -> TRUE .)
    EQUALS          reduce using rule 39 (expression -> TRUE .)
    SEMI            reduce using rule 39 (expression -> TRUE .)
    RPAREN          reduce using rule 39 (expression -> TRUE .)
    THEN            reduce using rule 39 (expression -> TRUE .)
    LOOP            reduce using rule 39 (expression -> TRUE .)
    OF              reduce using rule 39 (expression -> TRUE .)
    COMMA           reduce using rule 39 (expression -> TRUE .)
    RBRACE          reduce using rule 39 (expression -> TRUE .)
    ELSE            reduce using rule 39 (expression -> TRUE .)
    POOL            reduce using rule 39 (expression -> TRUE .)
    FI              reduce using rule 39 (expression -> TRUE .)
    IN              reduce using rule 39 (expression -> TRUE .)


state 48

    (40) expression -> FALSE .

    AT              reduce using rule 40 (expression -> FALSE .)
    DOT             reduce using rule 40 (expression -> FALSE .)
    PLUS            reduce using rule 40 (expression -> FALSE .)
    MINUS           reduce using rule 40 (expression -> FALSE .)
    TIMES           reduce using rule 40 (expression -> FALSE .)
    DIVIDE          reduce using rule 40 (expression -> FALSE .)
    LT              reduce using rule 40 (expression -> FALSE .)
    LE              reduce using rule 40 (expression -> FALSE .)
    EQUALS          reduce using rule 40 (expression -> FALSE .)
    SEMI            reduce using rule 40 (expression -> FALSE .)
    RPAREN          reduce using rule 40 (expression -> FALSE .)
    THEN            reduce using rule 40 (expression -> FALSE .)
    LOOP            reduce using rule 40 (expression -> FALSE .)
    OF              reduce using rule 40 (expression -> FALSE .)
    COMMA           reduce using rule 40 (expression -> FALSE .)
    RBRACE          reduce using rule 40 (expression -> FALSE .)
    ELSE            reduce using rule 40 (expression -> FALSE .)
    POOL            reduce using rule 40 (expression -> FALSE .)
    FI              reduce using rule 40 (expression -> FALSE .)
    IN              reduce using rule 40 (expression -> FALSE .)


state 49

    (7) feature -> IDENTIFIER LPAREN formal_list RPAREN COLON TYPE . LBRACE expression RBRACE

    LBRACE          shift and go to state 75


state 50

    (12) formal_tail -> COMMA formal formal_tail .

    RPAREN          reduce using rule 12 (formal_tail -> COMMA formal formal_tail .)


state 51

    (15) expression -> IDENTIFIER LARROW . expression
    (15) expression -> . IDENTIFIER LARROW expression
    (16) expression -> . expression AT TYPE DOT IDENTIFIER LPAREN arg_list RPAREN
    (17) expression -> . expression DOT IDENTIFIER LPAREN arg_list RPAREN
    (18) expression -> . IDENTIFIER LPAREN arg_list RPAREN
    (19) expression -> . IF expression THEN expression ELSE expression FI
    (20) expression -> . WHILE expression LOOP expression POOL
    (21) expression -> . LBRACE block RBRACE
    (22) expression -> . LET binding_list IN expression
    (23) expression -> . CASE expression OF case_list ESAC
    (24) expression -> . NEW TYPE
    (25) expression -> . ISVOID expression
    (26) expression -> . expression PLUS expression
    (27) expression -> . expression MINUS expression
    (28) expression -> . expression TIMES expression
    (29) expression -> . expression DIVIDE expression
    (30) expression -> . TILDE expression
    (31) expression -> . expression LT expression
    (32) expression -> . expression LE expression
    (33) expression -> . expression EQUALS expression
    (34) expression -> . NOT expression
    (35) expression -> . LPAREN expression RPAREN
    (36) expression -> . IDENTIFIER
    (37) expression -> . INTEGER
    (38) expression -> . STRING
    (39) expression -> . TRUE
    (40) expression -> . FALSE

    IDENTIFIER      shift and go to state 33
    IF              shift and go to state 36
    WHILE           shift and go to state 37
    LBRACE          shift and go to state 38
    LET             shift and go to state 39
    CASE            shift and go to state 40
    NEW             shift and go to state 41
    ISVOID          shift and go to state 42
    TILDE           shift and go to state 43
    NOT             shift and go to state 44
    LPAREN          shift and go to state 35
    INTEGER         shift and go to state 45
    STRING          shift and go to state 46
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    expression                     shift and go to state 76

state 52

    (18) expression -> IDENTIFIER LPAREN . arg_list RPAREN
    (41) arg_list -> . expression arg_list_tail
    (42) arg_list -> .
    (15) expression -> . IDENTIFIER LARROW expression
    (16) expression -> . expression AT TYPE DOT IDENTIFIER LPAREN arg_list RPAREN
    (17) expression -> . expression DOT IDENTIFIER LPAREN arg_list RPAREN
    (18) expression -> . IDENTIFIER LPAREN arg_list RPAREN
    (19) expression -> . IF expression THEN expression ELSE expression FI
    (20) expression -> . WHILE expression LOOP expression POOL
    (21) expression -> . LBRACE block RBRACE
    (22) expression -> . LET binding_list IN expression
    (23) expression -> . CASE expression OF case_list ESAC
    (24) expression -> . NEW TYPE
    (25) expression -> . ISVOID expression
    (26) expression -> . expression PLUS expression
    (27) expression -> . expression MINUS expression
    (28) expression -> . expression TIMES expression
    (29) expression -> . expression DIVIDE expression
    (30) expression -> . TILDE expression
    (31) expression -> . expression LT expression
    (32) expression -> . expression LE expression
    (33) expression -> . expression EQUALS expression
    (34) expression -> . NOT expression
    (35) expression -> . LPAREN expression RPAREN
    (36) expression -> . IDENTIFIER
    (37) expression -> . INTEGER
    (38) expression -> . STRING
    (39) expression -> . TRUE
    (40) expression -> . FALSE

    RPAREN          reduce using rule 42 (arg_list -> .)
    IDENTIFIER      shift and go to state 33
    IF              shift and go to state 36
    WHILE           shift and go to state 37
    LBRACE          shift and go to state 38
    LET             shift and go to state 39
    CASE            shift and go to state 40
    NEW             shift and go to state 41
    ISVOID          shift and go to state 42
    TILDE           shift and go to state 43
    NOT             shift and go to state 44
    LPAREN          shift and go to state 35
    INTEGER         shift and go to state 45
    STRING          shift and go to state 46
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    arg_list                       shift and go to state 77
    expression                     shift and go to state 78

state 53

    (16) expression -> expression AT . TYPE DOT IDENTIFIER LPAREN arg_list RPAREN

    TYPE            shift and go to state 79


state 54

    (17) expression -> expression DOT . IDENTIFIER LPAREN arg_list RPAREN

    IDENTIFIER      shift and go to state 80


state 55

    (26) expression -> expression PLUS . expression
    (15) expression -> . IDENTIFIER LARROW expression
    (16) expression -> . expression AT TYPE DOT IDENTIFIER LPAREN arg_list RPAREN
    (17) expression -> . expression DOT IDENTIFIER LPAREN arg_list RPAREN
    (18) expression -> . IDENTIFIER LPAREN arg_list RPAREN
    (19) expression -> . IF expression THEN expression ELSE expression FI
    (20) expression -> . WHILE expression LOOP expression POOL
    (21) expression -> . LBRACE block RBRACE
    (22) expression -> . LET binding_list IN expression
    (23) expression -> . CASE expression OF case_list ESAC
    (24) expression -> . NEW TYPE
    (25) expression -> . ISVOID expression
    (26) expression -> . expression PLUS expression
    (27) expression -> . expression MINUS expression
    (28) expression -> . expression TIMES expression
    (29) expression -> . expression DIVIDE expression
    (30) expression -> . TILDE expression
    (31) expression -> . expression LT expression
    (32) expression -> . expression LE expression
    (33) expression -> . expression EQUALS expression
    (34) expression -> . NOT expression
    (35) expression -> . LPAREN expression RPAREN
    (36) expression -> . IDENTIFIER
    (37) expression -> . INTEGER
    (38) expression -> . STRING
    (39) expression -> . TRUE
    (40) expression -> . FALSE

    IDENTIFIER      shift and go to state 33
    IF              shift and go to state 36
    WHILE           shift and go to state 37
    LBRACE          shift and go to state 38
    LET             shift and go to state 39
    CASE            shift and go to state 40
    NEW             shift and go to state 41
    ISVOID          shift and go to state 42
    TILDE           shift and go to state 43
    NOT             shift and go to state 44
    LPAREN          shift and go to state 35
    INTEGER         shift and go to state 45
    STRING          shift and go to state 46
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    expression                     shift and go to state 81

state 56

    (27) expression -> expression MINUS . expression
    (15) expression -> . IDENTIFIER LARROW expression
    (16) expression -> . expression AT TYPE DOT IDENTIFIER LPAREN arg_list RPAREN
    (17) expression -> . expression DOT IDENTIFIER LPAREN arg_list RPAREN
    (18) expression -> . IDENTIFIER LPAREN arg_list RPAREN
    (19) expression -> . IF expression THEN expression ELSE expression FI
    (20) expression -> . WHILE expression LOOP expression POOL
    (21) expression -> . LBRACE block RBRACE
    (22) expression -> . LET binding_list IN expression
    (23) expression -> . CASE expression OF case_list ESAC
    (24) expression -> . NEW TYPE
    (25) expression -> . ISVOID expression
    (26) expression -> . expression PLUS expression
    (27) expression -> . expression MINUS expression
    (28) expression -> . expression TIMES expression
    (29) expression -> . expression DIVIDE expression
    (30) expression -> . TILDE expression
    (31) expression -> . expression LT expression
    (32) expression -> . expression LE expression
    (33) expression -> . expression EQUALS expression
    (34) expression -> . NOT expression
    (35) expression -> . LPAREN expression RPAREN
    (36) expression -> . IDENTIFIER
    (37) expression -> . INTEGER
    (38) expression -> . STRING
    (39) expression -> . TRUE
    (40) expression -> . FALSE

    IDENTIFIER      shift and go to state 33
    IF              shift and go to state 36
    WHILE           shift and go to state 37
    LBRACE          shift and go to state 38
    LET             shift and go to state 39
    CASE            shift and go to state 40
    NEW             shift and go to state 41
    ISVOID          shift and go to state 42
    TILDE           shift and go to state 43
    NOT             shift and go to state 44
    LPAREN          shift and go to state 35
    INTEGER         shift and go to state 45
    STRING          shift and go to state 46
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    expression                     shift and go to state 82

state 57

    (28) expression -> expression TIMES . expression
    (15) expression -> . IDENTIFIER LARROW expression
    (16) expression -> . expression AT TYPE DOT IDENTIFIER LPAREN arg_list RPAREN
    (17) expression -> . expression DOT IDENTIFIER LPAREN arg_list RPAREN
    (18) expression -> . IDENTIFIER LPAREN arg_list RPAREN
    (19) expression -> . IF expression THEN expression ELSE expression FI
    (20) expression -> . WHILE expression LOOP expression POOL
    (21) expression -> . LBRACE block RBRACE
    (22) expression -> . LET binding_list IN expression
    (23) expression -> . CASE expression OF case_list ESAC
    (24) expression -> . NEW TYPE
    (25) expression -> . ISVOID expression
    (26) expression -> . expression PLUS expression
    (27) expression -> . expression MINUS expression
    (28) expression -> . expression TIMES expression
    (29) expression -> . expression DIVIDE expression
    (30) expression -> . TILDE expression
    (31) expression -> . expression LT expression
    (32) expression -> . expression LE expression
    (33) expression -> . expression EQUALS expression
    (34) expression -> . NOT expression
    (35) expression -> . LPAREN expression RPAREN
    (36) expression -> . IDENTIFIER
    (37) expression -> . INTEGER
    (38) expression -> . STRING
    (39) expression -> . TRUE
    (40) expression -> . FALSE

    IDENTIFIER      shift and go to state 33
    IF              shift and go to state 36
    WHILE           shift and go to state 37
    LBRACE          shift and go to state 38
    LET             shift and go to state 39
    CASE            shift and go to state 40
    NEW             shift and go to state 41
    ISVOID          shift and go to state 42
    TILDE           shift and go to state 43
    NOT             shift and go to state 44
    LPAREN          shift and go to state 35
    INTEGER         shift and go to state 45
    STRING          shift and go to state 46
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    expression                     shift and go to state 83

state 58

    (29) expression -> expression DIVIDE . expression
    (15) expression -> . IDENTIFIER LARROW expression
    (16) expression -> . expression AT TYPE DOT IDENTIFIER LPAREN arg_list RPAREN
    (17) expression -> . expression DOT IDENTIFIER LPAREN arg_list RPAREN
    (18) expression -> . IDENTIFIER LPAREN arg_list RPAREN
    (19) expression -> . IF expression THEN expression ELSE expression FI
    (20) expression -> . WHILE expression LOOP expression POOL
    (21) expression -> . LBRACE block RBRACE
    (22) expression -> . LET binding_list IN expression
    (23) expression -> . CASE expression OF case_list ESAC
    (24) expression -> . NEW TYPE
    (25) expression -> . ISVOID expression
    (26) expression -> . expression PLUS expression
    (27) expression -> . expression MINUS expression
    (28) expression -> . expression TIMES expression
    (29) expression -> . expression DIVIDE expression
    (30) expression -> . TILDE expression
    (31) expression -> . expression LT expression
    (32) expression -> . expression LE expression
    (33) expression -> . expression EQUALS expression
    (34) expression -> . NOT expression
    (35) expression -> . LPAREN expression RPAREN
    (36) expression -> . IDENTIFIER
    (37) expression -> . INTEGER
    (38) expression -> . STRING
    (39) expression -> . TRUE
    (40) expression -> . FALSE

    IDENTIFIER      shift and go to state 33
    IF              shift and go to state 36
    WHILE           shift and go to state 37
    LBRACE          shift and go to state 38
    LET             shift and go to state 39
    CASE            shift and go to state 40
    NEW             shift and go to state 41
    ISVOID          shift and go to state 42
    TILDE           shift and go to state 43
    NOT             shift and go to state 44
    LPAREN          shift and go to state 35
    INTEGER         shift and go to state 45
    STRING          shift and go to state 46
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    expression                     shift and go to state 84

state 59

    (31) expression -> expression LT . expression
    (15) expression -> . IDENTIFIER LARROW expression
    (16) expression -> . expression AT TYPE DOT IDENTIFIER LPAREN arg_list RPAREN
    (17) expression -> . expression DOT IDENTIFIER LPAREN arg_list RPAREN
    (18) expression -> . IDENTIFIER LPAREN arg_list RPAREN
    (19) expression -> . IF expression THEN expression ELSE expression FI
    (20) expression -> . WHILE expression LOOP expression POOL
    (21) expression -> . LBRACE block RBRACE
    (22) expression -> . LET binding_list IN expression
    (23) expression -> . CASE expression OF case_list ESAC
    (24) expression -> . NEW TYPE
    (25) expression -> . ISVOID expression
    (26) expression -> . expression PLUS expression
    (27) expression -> . expression MINUS expression
    (28) expression -> . expression TIMES expression
    (29) expression -> . expression DIVIDE expression
    (30) expression -> . TILDE expression
    (31) expression -> . expression LT expression
    (32) expression -> . expression LE expression
    (33) expression -> . expression EQUALS expression
    (34) expression -> . NOT expression
    (35) expression -> . LPAREN expression RPAREN
    (36) expression -> . IDENTIFIER
    (37) expression -> . INTEGER
    (38) expression -> . STRING
    (39) expression -> . TRUE
    (40) expression -> . FALSE

    IDENTIFIER      shift and go to state 33
    IF              shift and go to state 36
    WHILE           shift and go to state 37
    LBRACE          shift and go to state 38
    LET             shift and go to state 39
    CASE            shift and go to state 40
    NEW             shift and go to state 41
    ISVOID          shift and go to state 42
    TILDE           shift and go to state 43
    NOT             shift and go to state 44
    LPAREN          shift and go to state 35
    INTEGER         shift and go to state 45
    STRING          shift and go to state 46
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    expression                     shift and go to state 85

state 60

    (32) expression -> expression LE . expression
    (15) expression -> . IDENTIFIER LARROW expression
    (16) expression -> . expression AT TYPE DOT IDENTIFIER LPAREN arg_list RPAREN
    (17) expression -> . expression DOT IDENTIFIER LPAREN arg_list RPAREN
    (18) expression -> . IDENTIFIER LPAREN arg_list RPAREN
    (19) expression -> . IF expression THEN expression ELSE expression FI
    (20) expression -> . WHILE expression LOOP expression POOL
    (21) expression -> . LBRACE block RBRACE
    (22) expression -> . LET binding_list IN expression
    (23) expression -> . CASE expression OF case_list ESAC
    (24) expression -> . NEW TYPE
    (25) expression -> . ISVOID expression
    (26) expression -> . expression PLUS expression
    (27) expression -> . expression MINUS expression
    (28) expression -> . expression TIMES expression
    (29) expression -> . expression DIVIDE expression
    (30) expression -> . TILDE expression
    (31) expression -> . expression LT expression
    (32) expression -> . expression LE expression
    (33) expression -> . expression EQUALS expression
    (34) expression -> . NOT expression
    (35) expression -> . LPAREN expression RPAREN
    (36) expression -> . IDENTIFIER
    (37) expression -> . INTEGER
    (38) expression -> . STRING
    (39) expression -> . TRUE
    (40) expression -> . FALSE

    IDENTIFIER      shift and go to state 33
    IF              shift and go to state 36
    WHILE           shift and go to state 37
    LBRACE          shift and go to state 38
    LET             shift and go to state 39
    CASE            shift and go to state 40
    NEW             shift and go to state 41
    ISVOID          shift and go to state 42
    TILDE           shift and go to state 43
    NOT             shift and go to state 44
    LPAREN          shift and go to state 35
    INTEGER         shift and go to state 45
    STRING          shift and go to state 46
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    expression                     shift and go to state 86

state 61

    (33) expression -> expression EQUALS . expression
    (15) expression -> . IDENTIFIER LARROW expression
    (16) expression -> . expression AT TYPE DOT IDENTIFIER LPAREN arg_list RPAREN
    (17) expression -> . expression DOT IDENTIFIER LPAREN arg_list RPAREN
    (18) expression -> . IDENTIFIER LPAREN arg_list RPAREN
    (19) expression -> . IF expression THEN expression ELSE expression FI
    (20) expression -> . WHILE expression LOOP expression POOL
    (21) expression -> . LBRACE block RBRACE
    (22) expression -> . LET binding_list IN expression
    (23) expression -> . CASE expression OF case_list ESAC
    (24) expression -> . NEW TYPE
    (25) expression -> . ISVOID expression
    (26) expression -> . expression PLUS expression
    (27) expression -> . expression MINUS expression
    (28) expression -> . expression TIMES expression
    (29) expression -> . expression DIVIDE expression
    (30) expression -> . TILDE expression
    (31) expression -> . expression LT expression
    (32) expression -> . expression LE expression
    (33) expression -> . expression EQUALS expression
    (34) expression -> . NOT expression
    (35) expression -> . LPAREN expression RPAREN
    (36) expression -> . IDENTIFIER
    (37) expression -> . INTEGER
    (38) expression -> . STRING
    (39) expression -> . TRUE
    (40) expression -> . FALSE

    IDENTIFIER      shift and go to state 33
    IF              shift and go to state 36
    WHILE           shift and go to state 37
    LBRACE          shift and go to state 38
    LET             shift and go to state 39
    CASE            shift and go to state 40
    NEW             shift and go to state 41
    ISVOID          shift and go to state 42
    TILDE           shift and go to state 43
    NOT             shift and go to state 44
    LPAREN          shift and go to state 35
    INTEGER         shift and go to state 45
    STRING          shift and go to state 46
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    expression                     shift and go to state 87

state 62

    (35) expression -> LPAREN expression . RPAREN
    (16) expression -> expression . AT TYPE DOT IDENTIFIER LPAREN arg_list RPAREN
    (17) expression -> expression . DOT IDENTIFIER LPAREN arg_list RPAREN
    (26) expression -> expression . PLUS expression
    (27) expression -> expression . MINUS expression
    (28) expression -> expression . TIMES expression
    (29) expression -> expression . DIVIDE expression
    (31) expression -> expression . LT expression
    (32) expression -> expression . LE expression
    (33) expression -> expression . EQUALS expression

    RPAREN          shift and go to state 88
    AT              shift and go to state 53
    DOT             shift and go to state 54
    PLUS            shift and go to state 55
    MINUS           shift and go to state 56
    TIMES           shift and go to state 57
    DIVIDE          shift and go to state 58
    LT              shift and go to state 59
    LE              shift and go to state 60
    EQUALS          shift and go to state 61


state 63

    (19) expression -> IF expression . THEN expression ELSE expression FI
    (16) expression -> expression . AT TYPE DOT IDENTIFIER LPAREN arg_list RPAREN
    (17) expression -> expression . DOT IDENTIFIER LPAREN arg_list RPAREN
    (26) expression -> expression . PLUS expression
    (27) expression -> expression . MINUS expression
    (28) expression -> expression . TIMES expression
    (29) expression -> expression . DIVIDE expression
    (31) expression -> expression . LT expression
    (32) expression -> expression . LE expression
    (33) expression -> expression . EQUALS expression

    THEN            shift and go to state 89
    AT              shift and go to state 53
    DOT             shift and go to state 54
    PLUS            shift and go to state 55
    MINUS           shift and go to state 56
    TIMES           shift and go to state 57
    DIVIDE          shift and go to state 58
    LT              shift and go to state 59
    LE              shift and go to state 60
    EQUALS          shift and go to state 61


state 64

    (20) expression -> WHILE expression . LOOP expression POOL
    (16) expression -> expression . AT TYPE DOT IDENTIFIER LPAREN arg_list RPAREN
    (17) expression -> expression . DOT IDENTIFIER LPAREN arg_list RPAREN
    (26) expression -> expression . PLUS expression
    (27) expression -> expression . MINUS expression
    (28) expression -> expression . TIMES expression
    (29) expression -> expression . DIVIDE expression
    (31) expression -> expression . LT expression
    (32) expression -> expression . LE expression
    (33) expression -> expression . EQUALS expression

    LOOP            shift and go to state 90
    AT              shift and go to state 53
    DOT             shift and go to state 54
    PLUS            shift and go to state 55
    MINUS           shift and go to state 56
    TIMES           shift and go to state 57
    DIVIDE          shift and go to state 58
    LT              shift and go to state 59
    LE              shift and go to state 60
    EQUALS          shift and go to state 61


state 65

    (21) expression -> LBRACE block . RBRACE

    RBRACE          shift and go to state 91


state 66

    (45) block -> expression . SEMI block
    (16) expression -> expression . AT TYPE DOT IDENTIFIER LPAREN arg_list RPAREN
    (17) expression -> expression . DOT IDENTIFIER LPAREN arg_list RPAREN
    (26) expression -> expression . PLUS expression
    (27) expression -> expression . MINUS expression
    (28) expression -> expression . TIMES expression
    (29) expression -> expression . DIVIDE expression
    (31) expression -> expression . LT expression
    (32) expression -> expression . LE expression
    (33) expression -> expression . EQUALS expression

    SEMI            shift and go to state 92
    AT              shift and go to state 53
    DOT             shift and go to state 54
    PLUS            shift and go to state 55
    MINUS           shift and go to state 56
    TIMES           shift and go to state 57
    DIVIDE          shift and go to state 58
    LT              shift and go to state 59
    LE              shift and go to state 60
    EQUALS          shift and go to state 61


state 67

    (22) expression -> LET binding_list . IN expression

    IN              shift and go to state 93


state 68

    (47) binding_list -> binding . binding_list_tail
    (48) binding_list_tail -> . COMMA binding binding_list_tail
    (49) binding_list_tail -> .

    COMMA           shift and go to state 95
    IN              reduce using rule 49 (binding_list_tail -> .)

    binding_list_tail              shift and go to state 94

state 69

    (50) binding -> IDENTIFIER . COLON TYPE LARROW expression
    (51) binding -> IDENTIFIER . COLON TYPE

    COLON           shift and go to state 96


state 70

    (23) expression -> CASE expression . OF case_list ESAC
    (16) expression -> expression . AT TYPE DOT IDENTIFIER LPAREN arg_list RPAREN
    (17) expression -> expression . DOT IDENTIFIER LPAREN arg_list RPAREN
    (26) expression -> expression . PLUS expression
    (27) expression -> expression . MINUS expression
    (28) expression -> expression . TIMES expression
    (29) expression -> expression . DIVIDE expression
    (31) expression -> expression . LT expression
    (32) expression -> expression . LE expression
    (33) expression -> expression . EQUALS expression

    OF              shift and go to state 97
    AT              shift and go to state 53
    DOT             shift and go to state 54
    PLUS            shift and go to state 55
    MINUS           shift and go to state 56
    TIMES           shift and go to state 57
    DIVIDE          shift and go to state 58
    LT              shift and go to state 59
    LE              shift and go to state 60
    EQUALS          shift and go to state 61


state 71

    (24) expression -> NEW TYPE .

    AT              reduce using rule 24 (expression -> NEW TYPE .)
    DOT             reduce using rule 24 (expression -> NEW TYPE .)
    PLUS            reduce using rule 24 (expression -> NEW TYPE .)
    MINUS           reduce using rule 24 (expression -> NEW TYPE .)
    TIMES           reduce using rule 24 (expression -> NEW TYPE .)
    DIVIDE          reduce using rule 24 (expression -> NEW TYPE .)
    LT              reduce using rule 24 (expression -> NEW TYPE .)
    LE              reduce using rule 24 (expression -> NEW TYPE .)
    EQUALS          reduce using rule 24 (expression -> NEW TYPE .)
    SEMI            reduce using rule 24 (expression -> NEW TYPE .)
    RPAREN          reduce using rule 24 (expression -> NEW TYPE .)
    THEN            reduce using rule 24 (expression -> NEW TYPE .)
    LOOP            reduce using rule 24 (expression -> NEW TYPE .)
    OF              reduce using rule 24 (expression -> NEW TYPE .)
    COMMA           reduce using rule 24 (expression -> NEW TYPE .)
    RBRACE          reduce using rule 24 (expression -> NEW TYPE .)
    ELSE            reduce using rule 24 (expression -> NEW TYPE .)
    POOL            reduce using rule 24 (expression -> NEW TYPE .)
    FI              reduce using rule 24 (expression -> NEW TYPE .)
    IN              reduce using rule 24 (expression -> NEW TYPE .)


state 72

    (25) expression -> ISVOID expression .
    (16) expression -> expression . AT TYPE DOT IDENTIFIER LPAREN arg_list RPAREN
    (17) expression -> expression . DOT IDENTIFIER LPAREN arg_list RPAREN
    (26) expression -> expression . PLUS expression
    (27) expression -> expression . MINUS expression
    (28) expression -> expression . TIMES expression
    (29) expression -> expression . DIVIDE expression
    (31) expression -> expression . LT expression
    (32) expression -> expression . LE expression
    (33) expression -> expression . EQUALS expression

    PLUS            reduce using rule 25 (expression -> ISVOID expression .)
    MINUS           reduce using rule 25 (expression -> ISVOID expression .)
    TIMES           reduce using rule 25 (expression -> ISVOID expression .)
    DIVIDE          reduce using rule 25 (expression -> ISVOID expression .)
    LT              reduce using rule 25 (expression -> ISVOID expression .)
    LE              reduce using rule 25 (expression -> ISVOID expression .)
    EQUALS          reduce using rule 25 (expression -> ISVOID expression .)
    SEMI            reduce using rule 25 (expression -> ISVOID expression .)
    RPAREN          reduce using rule 25 (expression -> ISVOID expression .)
    THEN            reduce using rule 25 (expression -> ISVOID expression .)
    LOOP            reduce using rule 25 (expression -> ISVOID expression .)
    OF              reduce using rule 25 (expression -> ISVOID expression .)
    COMMA           reduce using rule 25 (expression -> ISVOID expression .)
    RBRACE          reduce using rule 25 (expression -> ISVOID expression .)
    ELSE            reduce using rule 25 (expression -> ISVOID expression .)
    POOL            reduce using rule 25 (expression -> ISVOID expression .)
    FI              reduce using rule 25 (expression -> ISVOID expression .)
    IN              reduce using rule 25 (expression -> ISVOID expression .)
    AT              shift and go to state 53
    DOT             shift and go to state 54

  ! AT              [ reduce using rule 25 (expression -> ISVOID expression .) ]
  ! DOT             [ reduce using rule 25 (expression -> ISVOID expression .) ]
  ! PLUS            [ shift and go to state 55 ]
  ! MINUS           [ shift and go to state 56 ]
  ! TIMES           [ shift and go to state 57 ]
  ! DIVIDE          [ shift and go to state 58 ]
  ! LT              [ shift and go to state 59 ]
  ! LE              [ shift and go to state 60 ]
  ! EQUALS          [ shift and go to state 61 ]


state 73

    (30) expression -> TILDE expression .
    (16) expression -> expression . AT TYPE DOT IDENTIFIER LPAREN arg_list RPAREN
    (17) expression -> expression . DOT IDENTIFIER LPAREN arg_list RPAREN
    (26) expression -> expression . PLUS expression
    (27) expression -> expression . MINUS expression
    (28) expression -> expression . TIMES expression
    (29) expression -> expression . DIVIDE expression
    (31) expression -> expression . LT expression
    (32) expression -> expression . LE expression
    (33) expression -> expression . EQUALS expression

    PLUS            reduce using rule 30 (expression -> TILDE expression .)
    MINUS           reduce using rule 30 (expression -> TILDE expression .)
    TIMES           reduce using rule 30 (expression -> TILDE expression .)
    DIVIDE          reduce using rule 30 (expression -> TILDE expression .)
    LT              reduce using rule 30 (expression -> TILDE expression .)
    LE              reduce using rule 30 (expression -> TILDE expression .)
    EQUALS          reduce using rule 30 (expression -> TILDE expression .)
    SEMI            reduce using rule 30 (expression -> TILDE expression .)
    RPAREN          reduce using rule 30 (expression -> TILDE expression .)
    THEN            reduce using rule 30 (expression -> TILDE expression .)
    LOOP            reduce using rule 30 (expression -> TILDE expression .)
    OF              reduce using rule 30 (expression -> TILDE expression .)
    COMMA           reduce using rule 30 (expression -> TILDE expression .)
    RBRACE          reduce using rule 30 (expression -> TILDE expression .)
    ELSE            reduce using rule 30 (expression -> TILDE expression .)
    POOL            reduce using rule 30 (expression -> TILDE expression .)
    FI              reduce using rule 30 (expression -> TILDE expression .)
    IN              reduce using rule 30 (expression -> TILDE expression .)
    AT              shift and go to state 53
    DOT             shift and go to state 54

  ! AT              [ reduce using rule 30 (expression -> TILDE expression .) ]
  ! DOT             [ reduce using rule 30 (expression -> TILDE expression .) ]
  ! PLUS            [ shift and go to state 55 ]
  ! MINUS           [ shift and go to state 56 ]
  ! TIMES           [ shift and go to state 57 ]
  ! DIVIDE          [ shift and go to state 58 ]
  ! LT              [ shift and go to state 59 ]
  ! LE              [ shift and go to state 60 ]
  ! EQUALS          [ shift and go to state 61 ]


state 74

    (34) expression -> NOT expression .
    (16) expression -> expression . AT TYPE DOT IDENTIFIER LPAREN arg_list RPAREN
    (17) expression -> expression . DOT IDENTIFIER LPAREN arg_list RPAREN
    (26) expression -> expression . PLUS expression
    (27) expression -> expression . MINUS expression
    (28) expression -> expression . TIMES expression
    (29) expression -> expression . DIVIDE expression
    (31) expression -> expression . LT expression
    (32) expression -> expression . LE expression
    (33) expression -> expression . EQUALS expression

    SEMI            reduce using rule 34 (expression -> NOT expression .)
    RPAREN          reduce using rule 34 (expression -> NOT expression .)
    THEN            reduce using rule 34 (expression -> NOT expression .)
    LOOP            reduce using rule 34 (expression -> NOT expression .)
    OF              reduce using rule 34 (expression -> NOT expression .)
    COMMA           reduce using rule 34 (expression -> NOT expression .)
    RBRACE          reduce using rule 34 (expression -> NOT expression .)
    ELSE            reduce using rule 34 (expression -> NOT expression .)
    POOL            reduce using rule 34 (expression -> NOT expression .)
    FI              reduce using rule 34 (expression -> NOT expression .)
    IN              reduce using rule 34 (expression -> NOT expression .)
    AT              shift and go to state 53
    DOT             shift and go to state 54
    PLUS            shift and go to state 55
    MINUS           shift and go to state 56
    TIMES           shift and go to state 57
    DIVIDE          shift and go to state 58
    LT              shift and go to state 59
    LE              shift and go to state 60
    EQUALS          shift and go to state 61

  ! AT              [ reduce using rule 34 (expression -> NOT expression .) ]
  ! DOT             [ reduce using rule 34 (expression -> NOT expression .) ]
  ! PLUS            [ reduce using rule 34 (expression -> NOT expression .) ]
  ! MINUS           [ reduce using rule 34 (expression -> NOT expression .) ]
  ! TIMES           [ reduce using rule 34 (expression -> NOT expression .) ]
  ! DIVIDE          [ reduce using rule 34 (expression -> NOT expression .) ]
  ! LT              [ reduce using rule 34 (expression -> NOT expression .) ]
  ! LE              [ reduce using rule 34 (expression -> NOT expression .) ]
  ! EQUALS          [ reduce using rule 34 (expression -> NOT expression .) ]


state 75

    (7) feature -> IDENTIFIER LPAREN formal_list RPAREN COLON TYPE LBRACE . expression RBRACE
    (15) expression -> . IDENTIFIER LARROW expression
    (16) expression -> . expression AT TYPE DOT IDENTIFIER LPAREN arg_list RPAREN
    (17) expression -> . expression DOT IDENTIFIER LPAREN arg_list RPAREN
    (18) expression -> . IDENTIFIER LPAREN arg_list RPAREN
    (19) expression -> . IF expression THEN expression ELSE expression FI
    (20) expression -> . WHILE expression LOOP expression POOL
    (21) expression -> . LBRACE block RBRACE
    (22) expression -> . LET binding_list IN expression
    (23) expression -> . CASE expression OF case_list ESAC
    (24) expression -> . NEW TYPE
    (25) expression -> . ISVOID expression
    (26) expression -> . expression PLUS expression
    (27) expression -> . expression MINUS expression
    (28) expression -> . expression TIMES expression
    (29) expression -> . expression DIVIDE expression
    (30) expression -> . TILDE expression
    (31) expression -> . expression LT expression
    (32) expression -> . expression LE expression
    (33) expression -> . expression EQUALS expression
    (34) expression -> . NOT expression
    (35) expression -> . LPAREN expression RPAREN
    (36) expression -> . IDENTIFIER
    (37) expression -> . INTEGER
    (38) expression -> . STRING
    (39) expression -> . TRUE
    (40) expression -> . FALSE

    IDENTIFIER      shift and go to state 33
    IF              shift and go to state 36
    WHILE           shift and go to state 37
    LBRACE          shift and go to state 38
    LET             shift and go to state 39
    CASE            shift and go to state 40
    NEW             shift and go to state 41
    ISVOID          shift and go to state 42
    TILDE           shift and go to state 43
    NOT             shift and go to state 44
    LPAREN          shift and go to state 35
    INTEGER         shift and go to state 45
    STRING          shift and go to state 46
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    expression                     shift and go to state 98

state 76

    (15) expression -> IDENTIFIER LARROW expression .
    (16) expression -> expression . AT TYPE DOT IDENTIFIER LPAREN arg_list RPAREN
    (17) expression -> expression . DOT IDENTIFIER LPAREN arg_list RPAREN
    (26) expression -> expression . PLUS expression
    (27) expression -> expression . MINUS expression
    (28) expression -> expression . TIMES expression
    (29) expression -> expression . DIVIDE expression
    (31) expression -> expression . LT expression
    (32) expression -> expression . LE expression
    (33) expression -> expression . EQUALS expression

    SEMI            reduce using rule 15 (expression -> IDENTIFIER LARROW expression .)
    RPAREN          reduce using rule 15 (expression -> IDENTIFIER LARROW expression .)
    THEN            reduce using rule 15 (expression -> IDENTIFIER LARROW expression .)
    LOOP            reduce using rule 15 (expression -> IDENTIFIER LARROW expression .)
    OF              reduce using rule 15 (expression -> IDENTIFIER LARROW expression .)
    COMMA           reduce using rule 15 (expression -> IDENTIFIER LARROW expression .)
    RBRACE          reduce using rule 15 (expression -> IDENTIFIER LARROW expression .)
    ELSE            reduce using rule 15 (expression -> IDENTIFIER LARROW expression .)
    POOL            reduce using rule 15 (expression -> IDENTIFIER LARROW expression .)
    FI              reduce using rule 15 (expression -> IDENTIFIER LARROW expression .)
    IN              reduce using rule 15 (expression -> IDENTIFIER LARROW expression .)
    AT              shift and go to state 53
    DOT             shift and go to state 54
    PLUS            shift and go to state 55
    MINUS           shift and go to state 56
    TIMES           shift and go to state 57
    DIVIDE          shift and go to state 58
    LT              shift and go to state 59
    LE              shift and go to state 60
    EQUALS          shift and go to state 61

  ! AT              [ reduce using rule 15 (expression -> IDENTIFIER LARROW expression .) ]
  ! DOT             [ reduce using rule 15 (expression -> IDENTIFIER LARROW expression .) ]
  ! PLUS            [ reduce using rule 15 (expression -> IDENTIFIER LARROW expression .) ]
  ! MINUS           [ reduce using rule 15 (expression -> IDENTIFIER LARROW expression .) ]
  ! TIMES           [ reduce using rule 15 (expression -> IDENTIFIER LARROW expression .) ]
  ! DIVIDE          [ reduce using rule 15 (expression -> IDENTIFIER LARROW expression .) ]
  ! LT              [ reduce using rule 15 (expression -> IDENTIFIER LARROW expression .) ]
  ! LE              [ reduce using rule 15 (expression -> IDENTIFIER LARROW expression .) ]
  ! EQUALS          [ reduce using rule 15 (expression -> IDENTIFIER LARROW expression .) ]


state 77

    (18) expression -> IDENTIFIER LPAREN arg_list . RPAREN

    RPAREN          shift and go to state 99


state 78

    (41) arg_list -> expression . arg_list_tail
    (16) expression -> expression . AT TYPE DOT IDENTIFIER LPAREN arg_list RPAREN
    (17) expression -> expression . DOT IDENTIFIER LPAREN arg_list RPAREN
    (26) expression -> expression . PLUS expression
    (27) expression -> expression . MINUS expression
    (28) expression -> expression . TIMES expression
    (29) expression -> expression . DIVIDE expression
    (31) expression -> expression . LT expression
    (32) expression -> expression . LE expression
    (33) expression -> expression . EQUALS expression
    (43) arg_list_tail -> . COMMA expression arg_list_tail
    (44) arg_list_tail -> .

    AT              shift and go to state 53
    DOT             shift and go to state 54
    PLUS            shift and go to state 55
    MINUS           shift and go to state 56
    TIMES           shift and go to state 57
    DIVIDE          shift and go to state 58
    LT              shift and go to state 59
    LE              shift and go to state 60
    EQUALS          shift and go to state 61
    COMMA           shift and go to state 101
    RPAREN          reduce using rule 44 (arg_list_tail -> .)

    arg_list_tail                  shift and go to state 100

state 79

    (16) expression -> expression AT TYPE . DOT IDENTIFIER LPAREN arg_list RPAREN

    DOT             shift and go to state 102


state 80

    (17) expression -> expression DOT IDENTIFIER . LPAREN arg_list RPAREN

    LPAREN          shift and go to state 103


state 81

    (26) expression -> expression PLUS expression .
    (16) expression -> expression . AT TYPE DOT IDENTIFIER LPAREN arg_list RPAREN
    (17) expression -> expression . DOT IDENTIFIER LPAREN arg_list RPAREN
    (26) expression -> expression . PLUS expression
    (27) expression -> expression . MINUS expression
    (28) expression -> expression . TIMES expression
    (29) expression -> expression . DIVIDE expression
    (31) expression -> expression . LT expression
    (32) expression -> expression . LE expression
    (33) expression -> expression . EQUALS expression

    PLUS            reduce using rule 26 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 26 (expression -> expression PLUS expression .)
    LT              reduce using rule 26 (expression -> expression PLUS expression .)
    LE              reduce using rule 26 (expression -> expression PLUS expression .)
    EQUALS          reduce using rule 26 (expression -> expression PLUS expression .)
    SEMI            reduce using rule 26 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 26 (expression -> expression PLUS expression .)
    THEN            reduce using rule 26 (expression -> expression PLUS expression .)
    LOOP            reduce using rule 26 (expression -> expression PLUS expression .)
    OF              reduce using rule 26 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 26 (expression -> expression PLUS expression .)
    RBRACE          reduce using rule 26 (expression -> expression PLUS expression .)
    ELSE            reduce using rule 26 (expression -> expression PLUS expression .)
    POOL            reduce using rule 26 (expression -> expression PLUS expression .)
    FI              reduce using rule 26 (expression -> expression PLUS expression .)
    IN              reduce using rule 26 (expression -> expression PLUS expression .)
    AT              shift and go to state 53
    DOT             shift and go to state 54
    TIMES           shift and go to state 57
    DIVIDE          shift and go to state 58

  ! AT              [ reduce using rule 26 (expression -> expression PLUS expression .) ]
  ! DOT             [ reduce using rule 26 (expression -> expression PLUS expression .) ]
  ! TIMES           [ reduce using rule 26 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 26 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 55 ]
  ! MINUS           [ shift and go to state 56 ]
  ! LT              [ shift and go to state 59 ]
  ! LE              [ shift and go to state 60 ]
  ! EQUALS          [ shift and go to state 61 ]


state 82

    (27) expression -> expression MINUS expression .
    (16) expression -> expression . AT TYPE DOT IDENTIFIER LPAREN arg_list RPAREN
    (17) expression -> expression . DOT IDENTIFIER LPAREN arg_list RPAREN
    (26) expression -> expression . PLUS expression
    (27) expression -> expression . MINUS expression
    (28) expression -> expression . TIMES expression
    (29) expression -> expression . DIVIDE expression
    (31) expression -> expression . LT expression
    (32) expression -> expression . LE expression
    (33) expression -> expression . EQUALS expression

    PLUS            reduce using rule 27 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 27 (expression -> expression MINUS expression .)
    LT              reduce using rule 27 (expression -> expression MINUS expression .)
    LE              reduce using rule 27 (expression -> expression MINUS expression .)
    EQUALS          reduce using rule 27 (expression -> expression MINUS expression .)
    SEMI            reduce using rule 27 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 27 (expression -> expression MINUS expression .)
    THEN            reduce using rule 27 (expression -> expression MINUS expression .)
    LOOP            reduce using rule 27 (expression -> expression MINUS expression .)
    OF              reduce using rule 27 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 27 (expression -> expression MINUS expression .)
    RBRACE          reduce using rule 27 (expression -> expression MINUS expression .)
    ELSE            reduce using rule 27 (expression -> expression MINUS expression .)
    POOL            reduce using rule 27 (expression -> expression MINUS expression .)
    FI              reduce using rule 27 (expression -> expression MINUS expression .)
    IN              reduce using rule 27 (expression -> expression MINUS expression .)
    AT              shift and go to state 53
    DOT             shift and go to state 54
    TIMES           shift and go to state 57
    DIVIDE          shift and go to state 58

  ! AT              [ reduce using rule 27 (expression -> expression MINUS expression .) ]
  ! DOT             [ reduce using rule 27 (expression -> expression MINUS expression .) ]
  ! TIMES           [ reduce using rule 27 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 27 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 55 ]
  ! MINUS           [ shift and go to state 56 ]
  ! LT              [ shift and go to state 59 ]
  ! LE              [ shift and go to state 60 ]
  ! EQUALS          [ shift and go to state 61 ]


state 83

    (28) expression -> expression TIMES expression .
    (16) expression -> expression . AT TYPE DOT IDENTIFIER LPAREN arg_list RPAREN
    (17) expression -> expression . DOT IDENTIFIER LPAREN arg_list RPAREN
    (26) expression -> expression . PLUS expression
    (27) expression -> expression . MINUS expression
    (28) expression -> expression . TIMES expression
    (29) expression -> expression . DIVIDE expression
    (31) expression -> expression . LT expression
    (32) expression -> expression . LE expression
    (33) expression -> expression . EQUALS expression

    PLUS            reduce using rule 28 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 28 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 28 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 28 (expression -> expression TIMES expression .)
    LT              reduce using rule 28 (expression -> expression TIMES expression .)
    LE              reduce using rule 28 (expression -> expression TIMES expression .)
    EQUALS          reduce using rule 28 (expression -> expression TIMES expression .)
    SEMI            reduce using rule 28 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 28 (expression -> expression TIMES expression .)
    THEN            reduce using rule 28 (expression -> expression TIMES expression .)
    LOOP            reduce using rule 28 (expression -> expression TIMES expression .)
    OF              reduce using rule 28 (expression -> expression TIMES expression .)
    COMMA           reduce using rule 28 (expression -> expression TIMES expression .)
    RBRACE          reduce using rule 28 (expression -> expression TIMES expression .)
    ELSE            reduce using rule 28 (expression -> expression TIMES expression .)
    POOL            reduce using rule 28 (expression -> expression TIMES expression .)
    FI              reduce using rule 28 (expression -> expression TIMES expression .)
    IN              reduce using rule 28 (expression -> expression TIMES expression .)
    AT              shift and go to state 53
    DOT             shift and go to state 54

  ! AT              [ reduce using rule 28 (expression -> expression TIMES expression .) ]
  ! DOT             [ reduce using rule 28 (expression -> expression TIMES expression .) ]
  ! PLUS            [ shift and go to state 55 ]
  ! MINUS           [ shift and go to state 56 ]
  ! TIMES           [ shift and go to state 57 ]
  ! DIVIDE          [ shift and go to state 58 ]
  ! LT              [ shift and go to state 59 ]
  ! LE              [ shift and go to state 60 ]
  ! EQUALS          [ shift and go to state 61 ]


state 84

    (29) expression -> expression DIVIDE expression .
    (16) expression -> expression . AT TYPE DOT IDENTIFIER LPAREN arg_list RPAREN
    (17) expression -> expression . DOT IDENTIFIER LPAREN arg_list RPAREN
    (26) expression -> expression . PLUS expression
    (27) expression -> expression . MINUS expression
    (28) expression -> expression . TIMES expression
    (29) expression -> expression . DIVIDE expression
    (31) expression -> expression . LT expression
    (32) expression -> expression . LE expression
    (33) expression -> expression . EQUALS expression

    PLUS            reduce using rule 29 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 29 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 29 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 29 (expression -> expression DIVIDE expression .)
    LT              reduce using rule 29 (expression -> expression DIVIDE expression .)
    LE              reduce using rule 29 (expression -> expression DIVIDE expression .)
    EQUALS          reduce using rule 29 (expression -> expression DIVIDE expression .)
    SEMI            reduce using rule 29 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 29 (expression -> expression DIVIDE expression .)
    THEN            reduce using rule 29 (expression -> expression DIVIDE expression .)
    LOOP            reduce using rule 29 (expression -> expression DIVIDE expression .)
    OF              reduce using rule 29 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 29 (expression -> expression DIVIDE expression .)
    RBRACE          reduce using rule 29 (expression -> expression DIVIDE expression .)
    ELSE            reduce using rule 29 (expression -> expression DIVIDE expression .)
    POOL            reduce using rule 29 (expression -> expression DIVIDE expression .)
    FI              reduce using rule 29 (expression -> expression DIVIDE expression .)
    IN              reduce using rule 29 (expression -> expression DIVIDE expression .)
    AT              shift and go to state 53
    DOT             shift and go to state 54

  ! AT              [ reduce using rule 29 (expression -> expression DIVIDE expression .) ]
  ! DOT             [ reduce using rule 29 (expression -> expression DIVIDE expression .) ]
  ! PLUS            [ shift and go to state 55 ]
  ! MINUS           [ shift and go to state 56 ]
  ! TIMES           [ shift and go to state 57 ]
  ! DIVIDE          [ shift and go to state 58 ]
  ! LT              [ shift and go to state 59 ]
  ! LE              [ shift and go to state 60 ]
  ! EQUALS          [ shift and go to state 61 ]


state 85

    (31) expression -> expression LT expression .
    (16) expression -> expression . AT TYPE DOT IDENTIFIER LPAREN arg_list RPAREN
    (17) expression -> expression . DOT IDENTIFIER LPAREN arg_list RPAREN
    (26) expression -> expression . PLUS expression
    (27) expression -> expression . MINUS expression
    (28) expression -> expression . TIMES expression
    (29) expression -> expression . DIVIDE expression
    (31) expression -> expression . LT expression
    (32) expression -> expression . LE expression
    (33) expression -> expression . EQUALS expression

    LT              reduce using rule 31 (expression -> expression LT expression .)
    LE              reduce using rule 31 (expression -> expression LT expression .)
    EQUALS          reduce using rule 31 (expression -> expression LT expression .)
    SEMI            reduce using rule 31 (expression -> expression LT expression .)
    RPAREN          reduce using rule 31 (expression -> expression LT expression .)
    THEN            reduce using rule 31 (expression -> expression LT expression .)
    LOOP            reduce using rule 31 (expression -> expression LT expression .)
    OF              reduce using rule 31 (expression -> expression LT expression .)
    COMMA           reduce using rule 31 (expression -> expression LT expression .)
    RBRACE          reduce using rule 31 (expression -> expression LT expression .)
    ELSE            reduce using rule 31 (expression -> expression LT expression .)
    POOL            reduce using rule 31 (expression -> expression LT expression .)
    FI              reduce using rule 31 (expression -> expression LT expression .)
    IN              reduce using rule 31 (expression -> expression LT expression .)
    AT              shift and go to state 53
    DOT             shift and go to state 54
    PLUS            shift and go to state 55
    MINUS           shift and go to state 56
    TIMES           shift and go to state 57
    DIVIDE          shift and go to state 58

  ! AT              [ reduce using rule 31 (expression -> expression LT expression .) ]
  ! DOT             [ reduce using rule 31 (expression -> expression LT expression .) ]
  ! PLUS            [ reduce using rule 31 (expression -> expression LT expression .) ]
  ! MINUS           [ reduce using rule 31 (expression -> expression LT expression .) ]
  ! TIMES           [ reduce using rule 31 (expression -> expression LT expression .) ]
  ! DIVIDE          [ reduce using rule 31 (expression -> expression LT expression .) ]
  ! LT              [ shift and go to state 59 ]
  ! LE              [ shift and go to state 60 ]
  ! EQUALS          [ shift and go to state 61 ]


state 86

    (32) expression -> expression LE expression .
    (16) expression -> expression . AT TYPE DOT IDENTIFIER LPAREN arg_list RPAREN
    (17) expression -> expression . DOT IDENTIFIER LPAREN arg_list RPAREN
    (26) expression -> expression . PLUS expression
    (27) expression -> expression . MINUS expression
    (28) expression -> expression . TIMES expression
    (29) expression -> expression . DIVIDE expression
    (31) expression -> expression . LT expression
    (32) expression -> expression . LE expression
    (33) expression -> expression . EQUALS expression

    LT              reduce using rule 32 (expression -> expression LE expression .)
    LE              reduce using rule 32 (expression -> expression LE expression .)
    EQUALS          reduce using rule 32 (expression -> expression LE expression .)
    SEMI            reduce using rule 32 (expression -> expression LE expression .)
    RPAREN          reduce using rule 32 (expression -> expression LE expression .)
    THEN            reduce using rule 32 (expression -> expression LE expression .)
    LOOP            reduce using rule 32 (expression -> expression LE expression .)
    OF              reduce using rule 32 (expression -> expression LE expression .)
    COMMA           reduce using rule 32 (expression -> expression LE expression .)
    RBRACE          reduce using rule 32 (expression -> expression LE expression .)
    ELSE            reduce using rule 32 (expression -> expression LE expression .)
    POOL            reduce using rule 32 (expression -> expression LE expression .)
    FI              reduce using rule 32 (expression -> expression LE expression .)
    IN              reduce using rule 32 (expression -> expression LE expression .)
    AT              shift and go to state 53
    DOT             shift and go to state 54
    PLUS            shift and go to state 55
    MINUS           shift and go to state 56
    TIMES           shift and go to state 57
    DIVIDE          shift and go to state 58

  ! AT              [ reduce using rule 32 (expression -> expression LE expression .) ]
  ! DOT             [ reduce using rule 32 (expression -> expression LE expression .) ]
  ! PLUS            [ reduce using rule 32 (expression -> expression LE expression .) ]
  ! MINUS           [ reduce using rule 32 (expression -> expression LE expression .) ]
  ! TIMES           [ reduce using rule 32 (expression -> expression LE expression .) ]
  ! DIVIDE          [ reduce using rule 32 (expression -> expression LE expression .) ]
  ! LT              [ shift and go to state 59 ]
  ! LE              [ shift and go to state 60 ]
  ! EQUALS          [ shift and go to state 61 ]


state 87

    (33) expression -> expression EQUALS expression .
    (16) expression -> expression . AT TYPE DOT IDENTIFIER LPAREN arg_list RPAREN
    (17) expression -> expression . DOT IDENTIFIER LPAREN arg_list RPAREN
    (26) expression -> expression . PLUS expression
    (27) expression -> expression . MINUS expression
    (28) expression -> expression . TIMES expression
    (29) expression -> expression . DIVIDE expression
    (31) expression -> expression . LT expression
    (32) expression -> expression . LE expression
    (33) expression -> expression . EQUALS expression

    LT              reduce using rule 33 (expression -> expression EQUALS expression .)
    LE              reduce using rule 33 (expression -> expression EQUALS expression .)
    EQUALS          reduce using rule 33 (expression -> expression EQUALS expression .)
    SEMI            reduce using rule 33 (expression -> expression EQUALS expression .)
    RPAREN          reduce using rule 33 (expression -> expression EQUALS expression .)
    THEN            reduce using rule 33 (expression -> expression EQUALS expression .)
    LOOP            reduce using rule 33 (expression -> expression EQUALS expression .)
    OF              reduce using rule 33 (expression -> expression EQUALS expression .)
    COMMA           reduce using rule 33 (expression -> expression EQUALS expression .)
    RBRACE          reduce using rule 33 (expression -> expression EQUALS expression .)
    ELSE            reduce using rule 33 (expression -> expression EQUALS expression .)
    POOL            reduce using rule 33 (expression -> expression EQUALS expression .)
    FI              reduce using rule 33 (expression -> expression EQUALS expression .)
    IN              reduce using rule 33 (expression -> expression EQUALS expression .)
    AT              shift and go to state 53
    DOT             shift and go to state 54
    PLUS            shift and go to state 55
    MINUS           shift and go to state 56
    TIMES           shift and go to state 57
    DIVIDE          shift and go to state 58

  ! AT              [ reduce using rule 33 (expression -> expression EQUALS expression .) ]
  ! DOT             [ reduce using rule 33 (expression -> expression EQUALS expression .) ]
  ! PLUS            [ reduce using rule 33 (expression -> expression EQUALS expression .) ]
  ! MINUS           [ reduce using rule 33 (expression -> expression EQUALS expression .) ]
  ! TIMES           [ reduce using rule 33 (expression -> expression EQUALS expression .) ]
  ! DIVIDE          [ reduce using rule 33 (expression -> expression EQUALS expression .) ]
  ! LT              [ shift and go to state 59 ]
  ! LE              [ shift and go to state 60 ]
  ! EQUALS          [ shift and go to state 61 ]


state 88

    (35) expression -> LPAREN expression RPAREN .

    AT              reduce using rule 35 (expression -> LPAREN expression RPAREN .)
    DOT             reduce using rule 35 (expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 35 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 35 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 35 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 35 (expression -> LPAREN expression RPAREN .)
    LT              reduce using rule 35 (expression -> LPAREN expression RPAREN .)
    LE              reduce using rule 35 (expression -> LPAREN expression RPAREN .)
    EQUALS          reduce using rule 35 (expression -> LPAREN expression RPAREN .)
    SEMI            reduce using rule 35 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 35 (expression -> LPAREN expression RPAREN .)
    THEN            reduce using rule 35 (expression -> LPAREN expression RPAREN .)
    LOOP            reduce using rule 35 (expression -> LPAREN expression RPAREN .)
    OF              reduce using rule 35 (expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 35 (expression -> LPAREN expression RPAREN .)
    RBRACE          reduce using rule 35 (expression -> LPAREN expression RPAREN .)
    ELSE            reduce using rule 35 (expression -> LPAREN expression RPAREN .)
    POOL            reduce using rule 35 (expression -> LPAREN expression RPAREN .)
    FI              reduce using rule 35 (expression -> LPAREN expression RPAREN .)
    IN              reduce using rule 35 (expression -> LPAREN expression RPAREN .)


state 89

    (19) expression -> IF expression THEN . expression ELSE expression FI
    (15) expression -> . IDENTIFIER LARROW expression
    (16) expression -> . expression AT TYPE DOT IDENTIFIER LPAREN arg_list RPAREN
    (17) expression -> . expression DOT IDENTIFIER LPAREN arg_list RPAREN
    (18) expression -> . IDENTIFIER LPAREN arg_list RPAREN
    (19) expression -> . IF expression THEN expression ELSE expression FI
    (20) expression -> . WHILE expression LOOP expression POOL
    (21) expression -> . LBRACE block RBRACE
    (22) expression -> . LET binding_list IN expression
    (23) expression -> . CASE expression OF case_list ESAC
    (24) expression -> . NEW TYPE
    (25) expression -> . ISVOID expression
    (26) expression -> . expression PLUS expression
    (27) expression -> . expression MINUS expression
    (28) expression -> . expression TIMES expression
    (29) expression -> . expression DIVIDE expression
    (30) expression -> . TILDE expression
    (31) expression -> . expression LT expression
    (32) expression -> . expression LE expression
    (33) expression -> . expression EQUALS expression
    (34) expression -> . NOT expression
    (35) expression -> . LPAREN expression RPAREN
    (36) expression -> . IDENTIFIER
    (37) expression -> . INTEGER
    (38) expression -> . STRING
    (39) expression -> . TRUE
    (40) expression -> . FALSE

    IDENTIFIER      shift and go to state 33
    IF              shift and go to state 36
    WHILE           shift and go to state 37
    LBRACE          shift and go to state 38
    LET             shift and go to state 39
    CASE            shift and go to state 40
    NEW             shift and go to state 41
    ISVOID          shift and go to state 42
    TILDE           shift and go to state 43
    NOT             shift and go to state 44
    LPAREN          shift and go to state 35
    INTEGER         shift and go to state 45
    STRING          shift and go to state 46
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    expression                     shift and go to state 104

state 90

    (20) expression -> WHILE expression LOOP . expression POOL
    (15) expression -> . IDENTIFIER LARROW expression
    (16) expression -> . expression AT TYPE DOT IDENTIFIER LPAREN arg_list RPAREN
    (17) expression -> . expression DOT IDENTIFIER LPAREN arg_list RPAREN
    (18) expression -> . IDENTIFIER LPAREN arg_list RPAREN
    (19) expression -> . IF expression THEN expression ELSE expression FI
    (20) expression -> . WHILE expression LOOP expression POOL
    (21) expression -> . LBRACE block RBRACE
    (22) expression -> . LET binding_list IN expression
    (23) expression -> . CASE expression OF case_list ESAC
    (24) expression -> . NEW TYPE
    (25) expression -> . ISVOID expression
    (26) expression -> . expression PLUS expression
    (27) expression -> . expression MINUS expression
    (28) expression -> . expression TIMES expression
    (29) expression -> . expression DIVIDE expression
    (30) expression -> . TILDE expression
    (31) expression -> . expression LT expression
    (32) expression -> . expression LE expression
    (33) expression -> . expression EQUALS expression
    (34) expression -> . NOT expression
    (35) expression -> . LPAREN expression RPAREN
    (36) expression -> . IDENTIFIER
    (37) expression -> . INTEGER
    (38) expression -> . STRING
    (39) expression -> . TRUE
    (40) expression -> . FALSE

    IDENTIFIER      shift and go to state 33
    IF              shift and go to state 36
    WHILE           shift and go to state 37
    LBRACE          shift and go to state 38
    LET             shift and go to state 39
    CASE            shift and go to state 40
    NEW             shift and go to state 41
    ISVOID          shift and go to state 42
    TILDE           shift and go to state 43
    NOT             shift and go to state 44
    LPAREN          shift and go to state 35
    INTEGER         shift and go to state 45
    STRING          shift and go to state 46
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    expression                     shift and go to state 105

state 91

    (21) expression -> LBRACE block RBRACE .

    AT              reduce using rule 21 (expression -> LBRACE block RBRACE .)
    DOT             reduce using rule 21 (expression -> LBRACE block RBRACE .)
    PLUS            reduce using rule 21 (expression -> LBRACE block RBRACE .)
    MINUS           reduce using rule 21 (expression -> LBRACE block RBRACE .)
    TIMES           reduce using rule 21 (expression -> LBRACE block RBRACE .)
    DIVIDE          reduce using rule 21 (expression -> LBRACE block RBRACE .)
    LT              reduce using rule 21 (expression -> LBRACE block RBRACE .)
    LE              reduce using rule 21 (expression -> LBRACE block RBRACE .)
    EQUALS          reduce using rule 21 (expression -> LBRACE block RBRACE .)
    SEMI            reduce using rule 21 (expression -> LBRACE block RBRACE .)
    RPAREN          reduce using rule 21 (expression -> LBRACE block RBRACE .)
    THEN            reduce using rule 21 (expression -> LBRACE block RBRACE .)
    LOOP            reduce using rule 21 (expression -> LBRACE block RBRACE .)
    OF              reduce using rule 21 (expression -> LBRACE block RBRACE .)
    COMMA           reduce using rule 21 (expression -> LBRACE block RBRACE .)
    RBRACE          reduce using rule 21 (expression -> LBRACE block RBRACE .)
    ELSE            reduce using rule 21 (expression -> LBRACE block RBRACE .)
    POOL            reduce using rule 21 (expression -> LBRACE block RBRACE .)
    FI              reduce using rule 21 (expression -> LBRACE block RBRACE .)
    IN              reduce using rule 21 (expression -> LBRACE block RBRACE .)


state 92

    (45) block -> expression SEMI . block
    (45) block -> . expression SEMI block
    (46) block -> .
    (15) expression -> . IDENTIFIER LARROW expression
    (16) expression -> . expression AT TYPE DOT IDENTIFIER LPAREN arg_list RPAREN
    (17) expression -> . expression DOT IDENTIFIER LPAREN arg_list RPAREN
    (18) expression -> . IDENTIFIER LPAREN arg_list RPAREN
    (19) expression -> . IF expression THEN expression ELSE expression FI
    (20) expression -> . WHILE expression LOOP expression POOL
    (21) expression -> . LBRACE block RBRACE
    (22) expression -> . LET binding_list IN expression
    (23) expression -> . CASE expression OF case_list ESAC
    (24) expression -> . NEW TYPE
    (25) expression -> . ISVOID expression
    (26) expression -> . expression PLUS expression
    (27) expression -> . expression MINUS expression
    (28) expression -> . expression TIMES expression
    (29) expression -> . expression DIVIDE expression
    (30) expression -> . TILDE expression
    (31) expression -> . expression LT expression
    (32) expression -> . expression LE expression
    (33) expression -> . expression EQUALS expression
    (34) expression -> . NOT expression
    (35) expression -> . LPAREN expression RPAREN
    (36) expression -> . IDENTIFIER
    (37) expression -> . INTEGER
    (38) expression -> . STRING
    (39) expression -> . TRUE
    (40) expression -> . FALSE

    RBRACE          reduce using rule 46 (block -> .)
    IDENTIFIER      shift and go to state 33
    IF              shift and go to state 36
    WHILE           shift and go to state 37
    LBRACE          shift and go to state 38
    LET             shift and go to state 39
    CASE            shift and go to state 40
    NEW             shift and go to state 41
    ISVOID          shift and go to state 42
    TILDE           shift and go to state 43
    NOT             shift and go to state 44
    LPAREN          shift and go to state 35
    INTEGER         shift and go to state 45
    STRING          shift and go to state 46
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    expression                     shift and go to state 66
    block                          shift and go to state 106

state 93

    (22) expression -> LET binding_list IN . expression
    (15) expression -> . IDENTIFIER LARROW expression
    (16) expression -> . expression AT TYPE DOT IDENTIFIER LPAREN arg_list RPAREN
    (17) expression -> . expression DOT IDENTIFIER LPAREN arg_list RPAREN
    (18) expression -> . IDENTIFIER LPAREN arg_list RPAREN
    (19) expression -> . IF expression THEN expression ELSE expression FI
    (20) expression -> . WHILE expression LOOP expression POOL
    (21) expression -> . LBRACE block RBRACE
    (22) expression -> . LET binding_list IN expression
    (23) expression -> . CASE expression OF case_list ESAC
    (24) expression -> . NEW TYPE
    (25) expression -> . ISVOID expression
    (26) expression -> . expression PLUS expression
    (27) expression -> . expression MINUS expression
    (28) expression -> . expression TIMES expression
    (29) expression -> . expression DIVIDE expression
    (30) expression -> . TILDE expression
    (31) expression -> . expression LT expression
    (32) expression -> . expression LE expression
    (33) expression -> . expression EQUALS expression
    (34) expression -> . NOT expression
    (35) expression -> . LPAREN expression RPAREN
    (36) expression -> . IDENTIFIER
    (37) expression -> . INTEGER
    (38) expression -> . STRING
    (39) expression -> . TRUE
    (40) expression -> . FALSE

    IDENTIFIER      shift and go to state 33
    IF              shift and go to state 36
    WHILE           shift and go to state 37
    LBRACE          shift and go to state 38
    LET             shift and go to state 39
    CASE            shift and go to state 40
    NEW             shift and go to state 41
    ISVOID          shift and go to state 42
    TILDE           shift and go to state 43
    NOT             shift and go to state 44
    LPAREN          shift and go to state 35
    INTEGER         shift and go to state 45
    STRING          shift and go to state 46
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    expression                     shift and go to state 107

state 94

    (47) binding_list -> binding binding_list_tail .

    IN              reduce using rule 47 (binding_list -> binding binding_list_tail .)


state 95

    (48) binding_list_tail -> COMMA . binding binding_list_tail
    (50) binding -> . IDENTIFIER COLON TYPE LARROW expression
    (51) binding -> . IDENTIFIER COLON TYPE

    IDENTIFIER      shift and go to state 69

    binding                        shift and go to state 108

state 96

    (50) binding -> IDENTIFIER COLON . TYPE LARROW expression
    (51) binding -> IDENTIFIER COLON . TYPE

    TYPE            shift and go to state 109


state 97

    (23) expression -> CASE expression OF . case_list ESAC
    (52) case_list -> . case_element
    (53) case_list -> . case_element case_list
    (54) case_element -> . IDENTIFIER COLON TYPE RARROW expression SEMI

    IDENTIFIER      shift and go to state 112

    case_list                      shift and go to state 110
    case_element                   shift and go to state 111

state 98

    (7) feature -> IDENTIFIER LPAREN formal_list RPAREN COLON TYPE LBRACE expression . RBRACE
    (16) expression -> expression . AT TYPE DOT IDENTIFIER LPAREN arg_list RPAREN
    (17) expression -> expression . DOT IDENTIFIER LPAREN arg_list RPAREN
    (26) expression -> expression . PLUS expression
    (27) expression -> expression . MINUS expression
    (28) expression -> expression . TIMES expression
    (29) expression -> expression . DIVIDE expression
    (31) expression -> expression . LT expression
    (32) expression -> expression . LE expression
    (33) expression -> expression . EQUALS expression

    RBRACE          shift and go to state 113
    AT              shift and go to state 53
    DOT             shift and go to state 54
    PLUS            shift and go to state 55
    MINUS           shift and go to state 56
    TIMES           shift and go to state 57
    DIVIDE          shift and go to state 58
    LT              shift and go to state 59
    LE              shift and go to state 60
    EQUALS          shift and go to state 61


state 99

    (18) expression -> IDENTIFIER LPAREN arg_list RPAREN .

    AT              reduce using rule 18 (expression -> IDENTIFIER LPAREN arg_list RPAREN .)
    DOT             reduce using rule 18 (expression -> IDENTIFIER LPAREN arg_list RPAREN .)
    PLUS            reduce using rule 18 (expression -> IDENTIFIER LPAREN arg_list RPAREN .)
    MINUS           reduce using rule 18 (expression -> IDENTIFIER LPAREN arg_list RPAREN .)
    TIMES           reduce using rule 18 (expression -> IDENTIFIER LPAREN arg_list RPAREN .)
    DIVIDE          reduce using rule 18 (expression -> IDENTIFIER LPAREN arg_list RPAREN .)
    LT              reduce using rule 18 (expression -> IDENTIFIER LPAREN arg_list RPAREN .)
    LE              reduce using rule 18 (expression -> IDENTIFIER LPAREN arg_list RPAREN .)
    EQUALS          reduce using rule 18 (expression -> IDENTIFIER LPAREN arg_list RPAREN .)
    SEMI            reduce using rule 18 (expression -> IDENTIFIER LPAREN arg_list RPAREN .)
    RPAREN          reduce using rule 18 (expression -> IDENTIFIER LPAREN arg_list RPAREN .)
    THEN            reduce using rule 18 (expression -> IDENTIFIER LPAREN arg_list RPAREN .)
    LOOP            reduce using rule 18 (expression -> IDENTIFIER LPAREN arg_list RPAREN .)
    OF              reduce using rule 18 (expression -> IDENTIFIER LPAREN arg_list RPAREN .)
    COMMA           reduce using rule 18 (expression -> IDENTIFIER LPAREN arg_list RPAREN .)
    RBRACE          reduce using rule 18 (expression -> IDENTIFIER LPAREN arg_list RPAREN .)
    ELSE            reduce using rule 18 (expression -> IDENTIFIER LPAREN arg_list RPAREN .)
    POOL            reduce using rule 18 (expression -> IDENTIFIER LPAREN arg_list RPAREN .)
    FI              reduce using rule 18 (expression -> IDENTIFIER LPAREN arg_list RPAREN .)
    IN              reduce using rule 18 (expression -> IDENTIFIER LPAREN arg_list RPAREN .)


state 100

    (41) arg_list -> expression arg_list_tail .

    RPAREN          reduce using rule 41 (arg_list -> expression arg_list_tail .)


state 101

    (43) arg_list_tail -> COMMA . expression arg_list_tail
    (15) expression -> . IDENTIFIER LARROW expression
    (16) expression -> . expression AT TYPE DOT IDENTIFIER LPAREN arg_list RPAREN
    (17) expression -> . expression DOT IDENTIFIER LPAREN arg_list RPAREN
    (18) expression -> . IDENTIFIER LPAREN arg_list RPAREN
    (19) expression -> . IF expression THEN expression ELSE expression FI
    (20) expression -> . WHILE expression LOOP expression POOL
    (21) expression -> . LBRACE block RBRACE
    (22) expression -> . LET binding_list IN expression
    (23) expression -> . CASE expression OF case_list ESAC
    (24) expression -> . NEW TYPE
    (25) expression -> . ISVOID expression
    (26) expression -> . expression PLUS expression
    (27) expression -> . expression MINUS expression
    (28) expression -> . expression TIMES expression
    (29) expression -> . expression DIVIDE expression
    (30) expression -> . TILDE expression
    (31) expression -> . expression LT expression
    (32) expression -> . expression LE expression
    (33) expression -> . expression EQUALS expression
    (34) expression -> . NOT expression
    (35) expression -> . LPAREN expression RPAREN
    (36) expression -> . IDENTIFIER
    (37) expression -> . INTEGER
    (38) expression -> . STRING
    (39) expression -> . TRUE
    (40) expression -> . FALSE

    IDENTIFIER      shift and go to state 33
    IF              shift and go to state 36
    WHILE           shift and go to state 37
    LBRACE          shift and go to state 38
    LET             shift and go to state 39
    CASE            shift and go to state 40
    NEW             shift and go to state 41
    ISVOID          shift and go to state 42
    TILDE           shift and go to state 43
    NOT             shift and go to state 44
    LPAREN          shift and go to state 35
    INTEGER         shift and go to state 45
    STRING          shift and go to state 46
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    expression                     shift and go to state 114

state 102

    (16) expression -> expression AT TYPE DOT . IDENTIFIER LPAREN arg_list RPAREN

    IDENTIFIER      shift and go to state 115


state 103

    (17) expression -> expression DOT IDENTIFIER LPAREN . arg_list RPAREN
    (41) arg_list -> . expression arg_list_tail
    (42) arg_list -> .
    (15) expression -> . IDENTIFIER LARROW expression
    (16) expression -> . expression AT TYPE DOT IDENTIFIER LPAREN arg_list RPAREN
    (17) expression -> . expression DOT IDENTIFIER LPAREN arg_list RPAREN
    (18) expression -> . IDENTIFIER LPAREN arg_list RPAREN
    (19) expression -> . IF expression THEN expression ELSE expression FI
    (20) expression -> . WHILE expression LOOP expression POOL
    (21) expression -> . LBRACE block RBRACE
    (22) expression -> . LET binding_list IN expression
    (23) expression -> . CASE expression OF case_list ESAC
    (24) expression -> . NEW TYPE
    (25) expression -> . ISVOID expression
    (26) expression -> . expression PLUS expression
    (27) expression -> . expression MINUS expression
    (28) expression -> . expression TIMES expression
    (29) expression -> . expression DIVIDE expression
    (30) expression -> . TILDE expression
    (31) expression -> . expression LT expression
    (32) expression -> . expression LE expression
    (33) expression -> . expression EQUALS expression
    (34) expression -> . NOT expression
    (35) expression -> . LPAREN expression RPAREN
    (36) expression -> . IDENTIFIER
    (37) expression -> . INTEGER
    (38) expression -> . STRING
    (39) expression -> . TRUE
    (40) expression -> . FALSE

    RPAREN          reduce using rule 42 (arg_list -> .)
    IDENTIFIER      shift and go to state 33
    IF              shift and go to state 36
    WHILE           shift and go to state 37
    LBRACE          shift and go to state 38
    LET             shift and go to state 39
    CASE            shift and go to state 40
    NEW             shift and go to state 41
    ISVOID          shift and go to state 42
    TILDE           shift and go to state 43
    NOT             shift and go to state 44
    LPAREN          shift and go to state 35
    INTEGER         shift and go to state 45
    STRING          shift and go to state 46
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    expression                     shift and go to state 78
    arg_list                       shift and go to state 116

state 104

    (19) expression -> IF expression THEN expression . ELSE expression FI
    (16) expression -> expression . AT TYPE DOT IDENTIFIER LPAREN arg_list RPAREN
    (17) expression -> expression . DOT IDENTIFIER LPAREN arg_list RPAREN
    (26) expression -> expression . PLUS expression
    (27) expression -> expression . MINUS expression
    (28) expression -> expression . TIMES expression
    (29) expression -> expression . DIVIDE expression
    (31) expression -> expression . LT expression
    (32) expression -> expression . LE expression
    (33) expression -> expression . EQUALS expression

    ELSE            shift and go to state 117
    AT              shift and go to state 53
    DOT             shift and go to state 54
    PLUS            shift and go to state 55
    MINUS           shift and go to state 56
    TIMES           shift and go to state 57
    DIVIDE          shift and go to state 58
    LT              shift and go to state 59
    LE              shift and go to state 60
    EQUALS          shift and go to state 61


state 105

    (20) expression -> WHILE expression LOOP expression . POOL
    (16) expression -> expression . AT TYPE DOT IDENTIFIER LPAREN arg_list RPAREN
    (17) expression -> expression . DOT IDENTIFIER LPAREN arg_list RPAREN
    (26) expression -> expression . PLUS expression
    (27) expression -> expression . MINUS expression
    (28) expression -> expression . TIMES expression
    (29) expression -> expression . DIVIDE expression
    (31) expression -> expression . LT expression
    (32) expression -> expression . LE expression
    (33) expression -> expression . EQUALS expression

    POOL            shift and go to state 118
    AT              shift and go to state 53
    DOT             shift and go to state 54
    PLUS            shift and go to state 55
    MINUS           shift and go to state 56
    TIMES           shift and go to state 57
    DIVIDE          shift and go to state 58
    LT              shift and go to state 59
    LE              shift and go to state 60
    EQUALS          shift and go to state 61


state 106

    (45) block -> expression SEMI block .

    RBRACE          reduce using rule 45 (block -> expression SEMI block .)


state 107

    (22) expression -> LET binding_list IN expression .
    (16) expression -> expression . AT TYPE DOT IDENTIFIER LPAREN arg_list RPAREN
    (17) expression -> expression . DOT IDENTIFIER LPAREN arg_list RPAREN
    (26) expression -> expression . PLUS expression
    (27) expression -> expression . MINUS expression
    (28) expression -> expression . TIMES expression
    (29) expression -> expression . DIVIDE expression
    (31) expression -> expression . LT expression
    (32) expression -> expression . LE expression
    (33) expression -> expression . EQUALS expression

  ! shift/reduce conflict for AT resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
    SEMI            reduce using rule 22 (expression -> LET binding_list IN expression .)
    RPAREN          reduce using rule 22 (expression -> LET binding_list IN expression .)
    THEN            reduce using rule 22 (expression -> LET binding_list IN expression .)
    LOOP            reduce using rule 22 (expression -> LET binding_list IN expression .)
    OF              reduce using rule 22 (expression -> LET binding_list IN expression .)
    COMMA           reduce using rule 22 (expression -> LET binding_list IN expression .)
    RBRACE          reduce using rule 22 (expression -> LET binding_list IN expression .)
    ELSE            reduce using rule 22 (expression -> LET binding_list IN expression .)
    POOL            reduce using rule 22 (expression -> LET binding_list IN expression .)
    FI              reduce using rule 22 (expression -> LET binding_list IN expression .)
    IN              reduce using rule 22 (expression -> LET binding_list IN expression .)
    AT              shift and go to state 53
    DOT             shift and go to state 54
    PLUS            shift and go to state 55
    MINUS           shift and go to state 56
    TIMES           shift and go to state 57
    DIVIDE          shift and go to state 58
    LT              shift and go to state 59
    LE              shift and go to state 60
    EQUALS          shift and go to state 61

  ! AT              [ reduce using rule 22 (expression -> LET binding_list IN expression .) ]
  ! DOT             [ reduce using rule 22 (expression -> LET binding_list IN expression .) ]
  ! PLUS            [ reduce using rule 22 (expression -> LET binding_list IN expression .) ]
  ! MINUS           [ reduce using rule 22 (expression -> LET binding_list IN expression .) ]
  ! TIMES           [ reduce using rule 22 (expression -> LET binding_list IN expression .) ]
  ! DIVIDE          [ reduce using rule 22 (expression -> LET binding_list IN expression .) ]
  ! LT              [ reduce using rule 22 (expression -> LET binding_list IN expression .) ]
  ! LE              [ reduce using rule 22 (expression -> LET binding_list IN expression .) ]
  ! EQUALS          [ reduce using rule 22 (expression -> LET binding_list IN expression .) ]


state 108

    (48) binding_list_tail -> COMMA binding . binding_list_tail
    (48) binding_list_tail -> . COMMA binding binding_list_tail
    (49) binding_list_tail -> .

    COMMA           shift and go to state 95
    IN              reduce using rule 49 (binding_list_tail -> .)

    binding_list_tail              shift and go to state 119

state 109

    (50) binding -> IDENTIFIER COLON TYPE . LARROW expression
    (51) binding -> IDENTIFIER COLON TYPE .

    LARROW          shift and go to state 120
    COMMA           reduce using rule 51 (binding -> IDENTIFIER COLON TYPE .)
    IN              reduce using rule 51 (binding -> IDENTIFIER COLON TYPE .)


state 110

    (23) expression -> CASE expression OF case_list . ESAC

    ESAC            shift and go to state 121


state 111

    (52) case_list -> case_element .
    (53) case_list -> case_element . case_list
    (52) case_list -> . case_element
    (53) case_list -> . case_element case_list
    (54) case_element -> . IDENTIFIER COLON TYPE RARROW expression SEMI

    ESAC            reduce using rule 52 (case_list -> case_element .)
    IDENTIFIER      shift and go to state 112

    case_element                   shift and go to state 111
    case_list                      shift and go to state 122

state 112

    (54) case_element -> IDENTIFIER . COLON TYPE RARROW expression SEMI

    COLON           shift and go to state 123


state 113

    (7) feature -> IDENTIFIER LPAREN formal_list RPAREN COLON TYPE LBRACE expression RBRACE .

    SEMI            reduce using rule 7 (feature -> IDENTIFIER LPAREN formal_list RPAREN COLON TYPE LBRACE expression RBRACE .)


state 114

    (43) arg_list_tail -> COMMA expression . arg_list_tail
    (16) expression -> expression . AT TYPE DOT IDENTIFIER LPAREN arg_list RPAREN
    (17) expression -> expression . DOT IDENTIFIER LPAREN arg_list RPAREN
    (26) expression -> expression . PLUS expression
    (27) expression -> expression . MINUS expression
    (28) expression -> expression . TIMES expression
    (29) expression -> expression . DIVIDE expression
    (31) expression -> expression . LT expression
    (32) expression -> expression . LE expression
    (33) expression -> expression . EQUALS expression
    (43) arg_list_tail -> . COMMA expression arg_list_tail
    (44) arg_list_tail -> .

    AT              shift and go to state 53
    DOT             shift and go to state 54
    PLUS            shift and go to state 55
    MINUS           shift and go to state 56
    TIMES           shift and go to state 57
    DIVIDE          shift and go to state 58
    LT              shift and go to state 59
    LE              shift and go to state 60
    EQUALS          shift and go to state 61
    COMMA           shift and go to state 101
    RPAREN          reduce using rule 44 (arg_list_tail -> .)

    arg_list_tail                  shift and go to state 124

state 115

    (16) expression -> expression AT TYPE DOT IDENTIFIER . LPAREN arg_list RPAREN

    LPAREN          shift and go to state 125


state 116

    (17) expression -> expression DOT IDENTIFIER LPAREN arg_list . RPAREN

    RPAREN          shift and go to state 126


state 117

    (19) expression -> IF expression THEN expression ELSE . expression FI
    (15) expression -> . IDENTIFIER LARROW expression
    (16) expression -> . expression AT TYPE DOT IDENTIFIER LPAREN arg_list RPAREN
    (17) expression -> . expression DOT IDENTIFIER LPAREN arg_list RPAREN
    (18) expression -> . IDENTIFIER LPAREN arg_list RPAREN
    (19) expression -> . IF expression THEN expression ELSE expression FI
    (20) expression -> . WHILE expression LOOP expression POOL
    (21) expression -> . LBRACE block RBRACE
    (22) expression -> . LET binding_list IN expression
    (23) expression -> . CASE expression OF case_list ESAC
    (24) expression -> . NEW TYPE
    (25) expression -> . ISVOID expression
    (26) expression -> . expression PLUS expression
    (27) expression -> . expression MINUS expression
    (28) expression -> . expression TIMES expression
    (29) expression -> . expression DIVIDE expression
    (30) expression -> . TILDE expression
    (31) expression -> . expression LT expression
    (32) expression -> . expression LE expression
    (33) expression -> . expression EQUALS expression
    (34) expression -> . NOT expression
    (35) expression -> . LPAREN expression RPAREN
    (36) expression -> . IDENTIFIER
    (37) expression -> . INTEGER
    (38) expression -> . STRING
    (39) expression -> . TRUE
    (40) expression -> . FALSE

    IDENTIFIER      shift and go to state 33
    IF              shift and go to state 36
    WHILE           shift and go to state 37
    LBRACE          shift and go to state 38
    LET             shift and go to state 39
    CASE            shift and go to state 40
    NEW             shift and go to state 41
    ISVOID          shift and go to state 42
    TILDE           shift and go to state 43
    NOT             shift and go to state 44
    LPAREN          shift and go to state 35
    INTEGER         shift and go to state 45
    STRING          shift and go to state 46
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    expression                     shift and go to state 127

state 118

    (20) expression -> WHILE expression LOOP expression POOL .

    AT              reduce using rule 20 (expression -> WHILE expression LOOP expression POOL .)
    DOT             reduce using rule 20 (expression -> WHILE expression LOOP expression POOL .)
    PLUS            reduce using rule 20 (expression -> WHILE expression LOOP expression POOL .)
    MINUS           reduce using rule 20 (expression -> WHILE expression LOOP expression POOL .)
    TIMES           reduce using rule 20 (expression -> WHILE expression LOOP expression POOL .)
    DIVIDE          reduce using rule 20 (expression -> WHILE expression LOOP expression POOL .)
    LT              reduce using rule 20 (expression -> WHILE expression LOOP expression POOL .)
    LE              reduce using rule 20 (expression -> WHILE expression LOOP expression POOL .)
    EQUALS          reduce using rule 20 (expression -> WHILE expression LOOP expression POOL .)
    SEMI            reduce using rule 20 (expression -> WHILE expression LOOP expression POOL .)
    RPAREN          reduce using rule 20 (expression -> WHILE expression LOOP expression POOL .)
    THEN            reduce using rule 20 (expression -> WHILE expression LOOP expression POOL .)
    LOOP            reduce using rule 20 (expression -> WHILE expression LOOP expression POOL .)
    OF              reduce using rule 20 (expression -> WHILE expression LOOP expression POOL .)
    COMMA           reduce using rule 20 (expression -> WHILE expression LOOP expression POOL .)
    RBRACE          reduce using rule 20 (expression -> WHILE expression LOOP expression POOL .)
    ELSE            reduce using rule 20 (expression -> WHILE expression LOOP expression POOL .)
    POOL            reduce using rule 20 (expression -> WHILE expression LOOP expression POOL .)
    FI              reduce using rule 20 (expression -> WHILE expression LOOP expression POOL .)
    IN              reduce using rule 20 (expression -> WHILE expression LOOP expression POOL .)


state 119

    (48) binding_list_tail -> COMMA binding binding_list_tail .

    IN              reduce using rule 48 (binding_list_tail -> COMMA binding binding_list_tail .)


state 120

    (50) binding -> IDENTIFIER COLON TYPE LARROW . expression
    (15) expression -> . IDENTIFIER LARROW expression
    (16) expression -> . expression AT TYPE DOT IDENTIFIER LPAREN arg_list RPAREN
    (17) expression -> . expression DOT IDENTIFIER LPAREN arg_list RPAREN
    (18) expression -> . IDENTIFIER LPAREN arg_list RPAREN
    (19) expression -> . IF expression THEN expression ELSE expression FI
    (20) expression -> . WHILE expression LOOP expression POOL
    (21) expression -> . LBRACE block RBRACE
    (22) expression -> . LET binding_list IN expression
    (23) expression -> . CASE expression OF case_list ESAC
    (24) expression -> . NEW TYPE
    (25) expression -> . ISVOID expression
    (26) expression -> . expression PLUS expression
    (27) expression -> . expression MINUS expression
    (28) expression -> . expression TIMES expression
    (29) expression -> . expression DIVIDE expression
    (30) expression -> . TILDE expression
    (31) expression -> . expression LT expression
    (32) expression -> . expression LE expression
    (33) expression -> . expression EQUALS expression
    (34) expression -> . NOT expression
    (35) expression -> . LPAREN expression RPAREN
    (36) expression -> . IDENTIFIER
    (37) expression -> . INTEGER
    (38) expression -> . STRING
    (39) expression -> . TRUE
    (40) expression -> . FALSE

    IDENTIFIER      shift and go to state 33
    IF              shift and go to state 36
    WHILE           shift and go to state 37
    LBRACE          shift and go to state 38
    LET             shift and go to state 39
    CASE            shift and go to state 40
    NEW             shift and go to state 41
    ISVOID          shift and go to state 42
    TILDE           shift and go to state 43
    NOT             shift and go to state 44
    LPAREN          shift and go to state 35
    INTEGER         shift and go to state 45
    STRING          shift and go to state 46
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    expression                     shift and go to state 128

state 121

    (23) expression -> CASE expression OF case_list ESAC .

    AT              reduce using rule 23 (expression -> CASE expression OF case_list ESAC .)
    DOT             reduce using rule 23 (expression -> CASE expression OF case_list ESAC .)
    PLUS            reduce using rule 23 (expression -> CASE expression OF case_list ESAC .)
    MINUS           reduce using rule 23 (expression -> CASE expression OF case_list ESAC .)
    TIMES           reduce using rule 23 (expression -> CASE expression OF case_list ESAC .)
    DIVIDE          reduce using rule 23 (expression -> CASE expression OF case_list ESAC .)
    LT              reduce using rule 23 (expression -> CASE expression OF case_list ESAC .)
    LE              reduce using rule 23 (expression -> CASE expression OF case_list ESAC .)
    EQUALS          reduce using rule 23 (expression -> CASE expression OF case_list ESAC .)
    SEMI            reduce using rule 23 (expression -> CASE expression OF case_list ESAC .)
    RPAREN          reduce using rule 23 (expression -> CASE expression OF case_list ESAC .)
    THEN            reduce using rule 23 (expression -> CASE expression OF case_list ESAC .)
    LOOP            reduce using rule 23 (expression -> CASE expression OF case_list ESAC .)
    OF              reduce using rule 23 (expression -> CASE expression OF case_list ESAC .)
    COMMA           reduce using rule 23 (expression -> CASE expression OF case_list ESAC .)
    RBRACE          reduce using rule 23 (expression -> CASE expression OF case_list ESAC .)
    ELSE            reduce using rule 23 (expression -> CASE expression OF case_list ESAC .)
    POOL            reduce using rule 23 (expression -> CASE expression OF case_list ESAC .)
    FI              reduce using rule 23 (expression -> CASE expression OF case_list ESAC .)
    IN              reduce using rule 23 (expression -> CASE expression OF case_list ESAC .)


state 122

    (53) case_list -> case_element case_list .

    ESAC            reduce using rule 53 (case_list -> case_element case_list .)


state 123

    (54) case_element -> IDENTIFIER COLON . TYPE RARROW expression SEMI

    TYPE            shift and go to state 129


state 124

    (43) arg_list_tail -> COMMA expression arg_list_tail .

    RPAREN          reduce using rule 43 (arg_list_tail -> COMMA expression arg_list_tail .)


state 125

    (16) expression -> expression AT TYPE DOT IDENTIFIER LPAREN . arg_list RPAREN
    (41) arg_list -> . expression arg_list_tail
    (42) arg_list -> .
    (15) expression -> . IDENTIFIER LARROW expression
    (16) expression -> . expression AT TYPE DOT IDENTIFIER LPAREN arg_list RPAREN
    (17) expression -> . expression DOT IDENTIFIER LPAREN arg_list RPAREN
    (18) expression -> . IDENTIFIER LPAREN arg_list RPAREN
    (19) expression -> . IF expression THEN expression ELSE expression FI
    (20) expression -> . WHILE expression LOOP expression POOL
    (21) expression -> . LBRACE block RBRACE
    (22) expression -> . LET binding_list IN expression
    (23) expression -> . CASE expression OF case_list ESAC
    (24) expression -> . NEW TYPE
    (25) expression -> . ISVOID expression
    (26) expression -> . expression PLUS expression
    (27) expression -> . expression MINUS expression
    (28) expression -> . expression TIMES expression
    (29) expression -> . expression DIVIDE expression
    (30) expression -> . TILDE expression
    (31) expression -> . expression LT expression
    (32) expression -> . expression LE expression
    (33) expression -> . expression EQUALS expression
    (34) expression -> . NOT expression
    (35) expression -> . LPAREN expression RPAREN
    (36) expression -> . IDENTIFIER
    (37) expression -> . INTEGER
    (38) expression -> . STRING
    (39) expression -> . TRUE
    (40) expression -> . FALSE

    RPAREN          reduce using rule 42 (arg_list -> .)
    IDENTIFIER      shift and go to state 33
    IF              shift and go to state 36
    WHILE           shift and go to state 37
    LBRACE          shift and go to state 38
    LET             shift and go to state 39
    CASE            shift and go to state 40
    NEW             shift and go to state 41
    ISVOID          shift and go to state 42
    TILDE           shift and go to state 43
    NOT             shift and go to state 44
    LPAREN          shift and go to state 35
    INTEGER         shift and go to state 45
    STRING          shift and go to state 46
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    expression                     shift and go to state 78
    arg_list                       shift and go to state 130

state 126

    (17) expression -> expression DOT IDENTIFIER LPAREN arg_list RPAREN .

    AT              reduce using rule 17 (expression -> expression DOT IDENTIFIER LPAREN arg_list RPAREN .)
    DOT             reduce using rule 17 (expression -> expression DOT IDENTIFIER LPAREN arg_list RPAREN .)
    PLUS            reduce using rule 17 (expression -> expression DOT IDENTIFIER LPAREN arg_list RPAREN .)
    MINUS           reduce using rule 17 (expression -> expression DOT IDENTIFIER LPAREN arg_list RPAREN .)
    TIMES           reduce using rule 17 (expression -> expression DOT IDENTIFIER LPAREN arg_list RPAREN .)
    DIVIDE          reduce using rule 17 (expression -> expression DOT IDENTIFIER LPAREN arg_list RPAREN .)
    LT              reduce using rule 17 (expression -> expression DOT IDENTIFIER LPAREN arg_list RPAREN .)
    LE              reduce using rule 17 (expression -> expression DOT IDENTIFIER LPAREN arg_list RPAREN .)
    EQUALS          reduce using rule 17 (expression -> expression DOT IDENTIFIER LPAREN arg_list RPAREN .)
    SEMI            reduce using rule 17 (expression -> expression DOT IDENTIFIER LPAREN arg_list RPAREN .)
    RPAREN          reduce using rule 17 (expression -> expression DOT IDENTIFIER LPAREN arg_list RPAREN .)
    THEN            reduce using rule 17 (expression -> expression DOT IDENTIFIER LPAREN arg_list RPAREN .)
    LOOP            reduce using rule 17 (expression -> expression DOT IDENTIFIER LPAREN arg_list RPAREN .)
    OF              reduce using rule 17 (expression -> expression DOT IDENTIFIER LPAREN arg_list RPAREN .)
    COMMA           reduce using rule 17 (expression -> expression DOT IDENTIFIER LPAREN arg_list RPAREN .)
    RBRACE          reduce using rule 17 (expression -> expression DOT IDENTIFIER LPAREN arg_list RPAREN .)
    ELSE            reduce using rule 17 (expression -> expression DOT IDENTIFIER LPAREN arg_list RPAREN .)
    POOL            reduce using rule 17 (expression -> expression DOT IDENTIFIER LPAREN arg_list RPAREN .)
    FI              reduce using rule 17 (expression -> expression DOT IDENTIFIER LPAREN arg_list RPAREN .)
    IN              reduce using rule 17 (expression -> expression DOT IDENTIFIER LPAREN arg_list RPAREN .)


state 127

    (19) expression -> IF expression THEN expression ELSE expression . FI
    (16) expression -> expression . AT TYPE DOT IDENTIFIER LPAREN arg_list RPAREN
    (17) expression -> expression . DOT IDENTIFIER LPAREN arg_list RPAREN
    (26) expression -> expression . PLUS expression
    (27) expression -> expression . MINUS expression
    (28) expression -> expression . TIMES expression
    (29) expression -> expression . DIVIDE expression
    (31) expression -> expression . LT expression
    (32) expression -> expression . LE expression
    (33) expression -> expression . EQUALS expression

    FI              shift and go to state 131
    AT              shift and go to state 53
    DOT             shift and go to state 54
    PLUS            shift and go to state 55
    MINUS           shift and go to state 56
    TIMES           shift and go to state 57
    DIVIDE          shift and go to state 58
    LT              shift and go to state 59
    LE              shift and go to state 60
    EQUALS          shift and go to state 61


state 128

    (50) binding -> IDENTIFIER COLON TYPE LARROW expression .
    (16) expression -> expression . AT TYPE DOT IDENTIFIER LPAREN arg_list RPAREN
    (17) expression -> expression . DOT IDENTIFIER LPAREN arg_list RPAREN
    (26) expression -> expression . PLUS expression
    (27) expression -> expression . MINUS expression
    (28) expression -> expression . TIMES expression
    (29) expression -> expression . DIVIDE expression
    (31) expression -> expression . LT expression
    (32) expression -> expression . LE expression
    (33) expression -> expression . EQUALS expression

    COMMA           reduce using rule 50 (binding -> IDENTIFIER COLON TYPE LARROW expression .)
    IN              reduce using rule 50 (binding -> IDENTIFIER COLON TYPE LARROW expression .)
    AT              shift and go to state 53
    DOT             shift and go to state 54
    PLUS            shift and go to state 55
    MINUS           shift and go to state 56
    TIMES           shift and go to state 57
    DIVIDE          shift and go to state 58
    LT              shift and go to state 59
    LE              shift and go to state 60
    EQUALS          shift and go to state 61


state 129

    (54) case_element -> IDENTIFIER COLON TYPE . RARROW expression SEMI

    RARROW          shift and go to state 132


state 130

    (16) expression -> expression AT TYPE DOT IDENTIFIER LPAREN arg_list . RPAREN

    RPAREN          shift and go to state 133


state 131

    (19) expression -> IF expression THEN expression ELSE expression FI .

    AT              reduce using rule 19 (expression -> IF expression THEN expression ELSE expression FI .)
    DOT             reduce using rule 19 (expression -> IF expression THEN expression ELSE expression FI .)
    PLUS            reduce using rule 19 (expression -> IF expression THEN expression ELSE expression FI .)
    MINUS           reduce using rule 19 (expression -> IF expression THEN expression ELSE expression FI .)
    TIMES           reduce using rule 19 (expression -> IF expression THEN expression ELSE expression FI .)
    DIVIDE          reduce using rule 19 (expression -> IF expression THEN expression ELSE expression FI .)
    LT              reduce using rule 19 (expression -> IF expression THEN expression ELSE expression FI .)
    LE              reduce using rule 19 (expression -> IF expression THEN expression ELSE expression FI .)
    EQUALS          reduce using rule 19 (expression -> IF expression THEN expression ELSE expression FI .)
    SEMI            reduce using rule 19 (expression -> IF expression THEN expression ELSE expression FI .)
    RPAREN          reduce using rule 19 (expression -> IF expression THEN expression ELSE expression FI .)
    THEN            reduce using rule 19 (expression -> IF expression THEN expression ELSE expression FI .)
    LOOP            reduce using rule 19 (expression -> IF expression THEN expression ELSE expression FI .)
    OF              reduce using rule 19 (expression -> IF expression THEN expression ELSE expression FI .)
    COMMA           reduce using rule 19 (expression -> IF expression THEN expression ELSE expression FI .)
    RBRACE          reduce using rule 19 (expression -> IF expression THEN expression ELSE expression FI .)
    ELSE            reduce using rule 19 (expression -> IF expression THEN expression ELSE expression FI .)
    POOL            reduce using rule 19 (expression -> IF expression THEN expression ELSE expression FI .)
    FI              reduce using rule 19 (expression -> IF expression THEN expression ELSE expression FI .)
    IN              reduce using rule 19 (expression -> IF expression THEN expression ELSE expression FI .)


state 132

    (54) case_element -> IDENTIFIER COLON TYPE RARROW . expression SEMI
    (15) expression -> . IDENTIFIER LARROW expression
    (16) expression -> . expression AT TYPE DOT IDENTIFIER LPAREN arg_list RPAREN
    (17) expression -> . expression DOT IDENTIFIER LPAREN arg_list RPAREN
    (18) expression -> . IDENTIFIER LPAREN arg_list RPAREN
    (19) expression -> . IF expression THEN expression ELSE expression FI
    (20) expression -> . WHILE expression LOOP expression POOL
    (21) expression -> . LBRACE block RBRACE
    (22) expression -> . LET binding_list IN expression
    (23) expression -> . CASE expression OF case_list ESAC
    (24) expression -> . NEW TYPE
    (25) expression -> . ISVOID expression
    (26) expression -> . expression PLUS expression
    (27) expression -> . expression MINUS expression
    (28) expression -> . expression TIMES expression
    (29) expression -> . expression DIVIDE expression
    (30) expression -> . TILDE expression
    (31) expression -> . expression LT expression
    (32) expression -> . expression LE expression
    (33) expression -> . expression EQUALS expression
    (34) expression -> . NOT expression
    (35) expression -> . LPAREN expression RPAREN
    (36) expression -> . IDENTIFIER
    (37) expression -> . INTEGER
    (38) expression -> . STRING
    (39) expression -> . TRUE
    (40) expression -> . FALSE

    IDENTIFIER      shift and go to state 33
    IF              shift and go to state 36
    WHILE           shift and go to state 37
    LBRACE          shift and go to state 38
    LET             shift and go to state 39
    CASE            shift and go to state 40
    NEW             shift and go to state 41
    ISVOID          shift and go to state 42
    TILDE           shift and go to state 43
    NOT             shift and go to state 44
    LPAREN          shift and go to state 35
    INTEGER         shift and go to state 45
    STRING          shift and go to state 46
    TRUE            shift and go to state 47
    FALSE           shift and go to state 48

    expression                     shift and go to state 134

state 133

    (16) expression -> expression AT TYPE DOT IDENTIFIER LPAREN arg_list RPAREN .

    AT              reduce using rule 16 (expression -> expression AT TYPE DOT IDENTIFIER LPAREN arg_list RPAREN .)
    DOT             reduce using rule 16 (expression -> expression AT TYPE DOT IDENTIFIER LPAREN arg_list RPAREN .)
    PLUS            reduce using rule 16 (expression -> expression AT TYPE DOT IDENTIFIER LPAREN arg_list RPAREN .)
    MINUS           reduce using rule 16 (expression -> expression AT TYPE DOT IDENTIFIER LPAREN arg_list RPAREN .)
    TIMES           reduce using rule 16 (expression -> expression AT TYPE DOT IDENTIFIER LPAREN arg_list RPAREN .)
    DIVIDE          reduce using rule 16 (expression -> expression AT TYPE DOT IDENTIFIER LPAREN arg_list RPAREN .)
    LT              reduce using rule 16 (expression -> expression AT TYPE DOT IDENTIFIER LPAREN arg_list RPAREN .)
    LE              reduce using rule 16 (expression -> expression AT TYPE DOT IDENTIFIER LPAREN arg_list RPAREN .)
    EQUALS          reduce using rule 16 (expression -> expression AT TYPE DOT IDENTIFIER LPAREN arg_list RPAREN .)
    SEMI            reduce using rule 16 (expression -> expression AT TYPE DOT IDENTIFIER LPAREN arg_list RPAREN .)
    RPAREN          reduce using rule 16 (expression -> expression AT TYPE DOT IDENTIFIER LPAREN arg_list RPAREN .)
    THEN            reduce using rule 16 (expression -> expression AT TYPE DOT IDENTIFIER LPAREN arg_list RPAREN .)
    LOOP            reduce using rule 16 (expression -> expression AT TYPE DOT IDENTIFIER LPAREN arg_list RPAREN .)
    OF              reduce using rule 16 (expression -> expression AT TYPE DOT IDENTIFIER LPAREN arg_list RPAREN .)
    COMMA           reduce using rule 16 (expression -> expression AT TYPE DOT IDENTIFIER LPAREN arg_list RPAREN .)
    RBRACE          reduce using rule 16 (expression -> expression AT TYPE DOT IDENTIFIER LPAREN arg_list RPAREN .)
    ELSE            reduce using rule 16 (expression -> expression AT TYPE DOT IDENTIFIER LPAREN arg_list RPAREN .)
    POOL            reduce using rule 16 (expression -> expression AT TYPE DOT IDENTIFIER LPAREN arg_list RPAREN .)
    FI              reduce using rule 16 (expression -> expression AT TYPE DOT IDENTIFIER LPAREN arg_list RPAREN .)
    IN              reduce using rule 16 (expression -> expression AT TYPE DOT IDENTIFIER LPAREN arg_list RPAREN .)


state 134

    (54) case_element -> IDENTIFIER COLON TYPE RARROW expression . SEMI
    (16) expression -> expression . AT TYPE DOT IDENTIFIER LPAREN arg_list RPAREN
    (17) expression -> expression . DOT IDENTIFIER LPAREN arg_list RPAREN
    (26) expression -> expression . PLUS expression
    (27) expression -> expression . MINUS expression
    (28) expression -> expression . TIMES expression
    (29) expression -> expression . DIVIDE expression
    (31) expression -> expression . LT expression
    (32) expression -> expression . LE expression
    (33) expression -> expression . EQUALS expression

    SEMI            shift and go to state 135
    AT              shift and go to state 53
    DOT             shift and go to state 54
    PLUS            shift and go to state 55
    MINUS           shift and go to state 56
    TIMES           shift and go to state 57
    DIVIDE          shift and go to state 58
    LT              shift and go to state 59
    LE              shift and go to state 60
    EQUALS          shift and go to state 61


state 135

    (54) case_element -> IDENTIFIER COLON TYPE RARROW expression SEMI .

    IDENTIFIER      reduce using rule 54 (case_element -> IDENTIFIER COLON TYPE RARROW expression SEMI .)
    ESAC            reduce using rule 54 (case_element -> IDENTIFIER COLON TYPE RARROW expression SEMI .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for AT in state 107 resolved as shift
WARNING: shift/reduce conflict for DOT in state 107 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 107 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 107 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 107 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 107 resolved as shift
WARNING: shift/reduce conflict for LT in state 107 resolved as shift
WARNING: shift/reduce conflict for LE in state 107 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 107 resolved as shift
